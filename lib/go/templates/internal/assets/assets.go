// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../scripts/borrow_nft.cdc (503B)
// ../../../scripts/get_collection_ids.cdc (479B)
// ../../../scripts/get_collection_length.cdc (387B)
// ../../../scripts/get_contract_storage_path.cdc (464B)
// ../../../scripts/get_nft_metadata.cdc (5.598kB)
// ../../../scripts/get_nft_view.cdc (4.407kB)
// ../../../scripts/get_total_supply.cdc (82B)
// ../../../transactions/NFTForwarding/change_forwarder_recipient.cdc (1.308kB)
// ../../../transactions/NFTForwarding/create_forwarder.cdc (2.499kB)
// ../../../transactions/NFTForwarding/transfer_nft_to_receiver.cdc (1.539kB)
// ../../../transactions/NFTForwarding/unlink_forwarder_link_collection.cdc (1.035kB)
// ../../../transactions/destroy_nft.cdc (842B)
// ../../../transactions/mint_nft.cdc (3.026kB)
// ../../../transactions/setup_account.cdc (915B)
// ../../../transactions/setup_account_from_nft_reference.cdc (1.35kB)
// ../../../transactions/setup_account_to_receive_royalty.cdc (1.415kB)
// ../../../transactions/transfer_nft.cdc (1.566kB)
// ../../../transactions/unlink_collection.cdc (488B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x4b\xc3\x30\x14\x87\xef\xf9\x2b\x7e\xf4\x20\x2d\xc8\x7a\x11\x0f\xc3\x39\xe6\xb0\xe0\xa5\x0c\xa9\x67\x49\xd3\xd7\xed\x61\x9a\x84\x34\x41\x65\xec\x7f\x97\xad\xeb\x3a\x35\xa7\x84\x97\x8f\xe4\xfb\xb8\x73\xd6\x07\x24\xa5\x35\x45\x34\x5b\xae\x35\x55\xf6\x83\x4c\x22\xc6\xc9\xf3\x97\xec\x9c\xa6\xb2\xa8\x12\x21\xf2\x1c\xd5\x8e\x7b\xf4\xca\xb3\x0b\xa8\xad\xf7\xf6\xb3\x87\x34\x28\x8b\x0a\xad\xb7\x1d\x24\x94\xd5\x9a\x54\x60\x6b\x84\x8b\x35\xda\x68\xd0\x49\x36\xa9\x6c\x1a\x4f\x7d\x3f\xc7\x6a\xd8\xdc\x82\x9b\x39\xde\x5e\x4c\xb8\xbf\xcb\xb0\x17\x00\xa0\x29\x40\x2a\x65\xa3\x09\x58\x60\x4b\x61\x35\x1c\x46\x38\x13\x97\x6b\xd3\x33\xaf\xd4\x62\x31\x62\xa7\xf9\x71\xcd\xb6\x14\xd6\xd2\xc9\x9a\x35\x87\xef\x74\xf2\x98\xad\x2f\xe4\x26\xd6\x9a\xd5\x46\x86\x5d\x36\x71\x83\xd5\xc3\xcd\xfe\x6f\x94\x7f\xe0\xe1\x31\x9d\xb8\xe5\x12\x4e\x1a\x56\x69\xb2\xb6\x51\x37\x30\x76\x0c\x04\x75\xf9\xc6\xd0\xc8\x9d\xe8\x2b\x83\xe4\xec\x95\xe7\x78\x1a\x10\x09\x4f\x2d\x79\x32\x8a\x10\x2c\x24\x7a\x47\x8a\x5b\x56\xa7\xd2\x6c\x10\x76\x74\x5d\x7a\xac\xf2\x8e\xc5\xef\x32\x67\x9d\xb2\xa8\xd2\x63\x6e\x6e\x32\x71\x10\x3f\x01\x00\x00\xff\xff\x4e\x04\x80\xf5\xf7\x01\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x84, 0xb6, 0xa6, 0xc4, 0xe9, 0xba, 0xb9, 0xbe, 0x30, 0x42, 0x37, 0x58, 0xe9, 0x72, 0x32, 0xf4, 0xd6, 0xa, 0x43, 0x31, 0x5e, 0x2c, 0xf3, 0x28, 0x2, 0xe8, 0xab, 0xf1, 0xb9, 0x29, 0xa2, 0xa7}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xc1\x6e\xf2\x30\x10\x84\xef\x7e\x8a\x51\x0e\xff\x9f\x48\x15\x5c\xaa\x1e\x50\x29\x42\x50\x24\x2e\x08\xb5\xf4\x54\xf5\xe0\x38\x0e\x58\x75\xd6\x96\xbd\x56\x5b\x21\xde\xbd\x0a\x34\x84\xa2\xe6\xb4\xd1\xce\x37\x3b\x63\xd3\x78\x17\x18\xd9\xca\xd1\x22\xd1\xd6\x94\x56\x6f\xdc\xbb\xa6\x4c\x74\x9b\xc7\x4f\xd9\x78\xab\x57\x8b\x4d\x26\xc4\x70\x38\xc4\xb3\x0a\xc6\x33\xd8\x61\xab\x19\xab\xc5\x06\xcb\x79\x84\x21\x48\x82\x54\xca\x25\xe2\xff\x11\xca\x59\xab\x15\x1b\x47\x2d\x24\x7c\x2a\x51\x27\x42\x23\x0d\xe5\xb2\xaa\x82\x8e\x71\x84\xe9\x69\xb8\xb9\x50\xaf\x53\x69\x8d\x5a\x4b\xde\x8d\xd0\xcf\xc5\x08\xaf\x2f\x4b\xe2\xbb\xdb\x37\xec\x05\x00\x58\xcd\xdd\x35\x8c\xdb\x24\xd3\xd3\x4f\x67\x5e\x88\xb3\xac\x37\x7f\xd2\x35\xc6\x1d\x76\xdc\xb7\xdf\x60\xab\x79\x26\xbd\x2c\x8d\x35\xfc\x95\xff\x95\xa5\xe8\xc5\xa5\x0b\xc1\x7d\xdc\xff\xdb\x5f\x3f\xd9\x60\x76\x05\x1e\x1e\xf2\x9e\x9b\x4c\xe0\x25\x19\x95\x67\x33\x97\x6c\x05\x72\x8c\x93\x15\xd4\xf9\x36\xea\xe0\x1a\xf8\x23\x7d\x11\x1b\x92\x11\xbd\x56\xa6\x36\xba\x82\x97\xbc\xcb\x7e\xea\x05\xcd\x29\xd0\xef\x86\x6d\x9d\xe5\x3c\xe6\x85\x38\x88\xef\x00\x00\x00\xff\xff\x0d\x6d\x19\xbc\xdf\x01\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd9, 0x20, 0xd, 0x93, 0xbe, 0xdd, 0xcf, 0xf4, 0xdb, 0x6c, 0x45, 0xe, 0x13, 0x32, 0xfa, 0xf, 0xdf, 0xb1, 0xe6, 0x85, 0xde, 0xb4, 0x78, 0x5f, 0x3e, 0x87, 0xeb, 0x75, 0x7a, 0x8a, 0xd1, 0xdc}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x4d\x6a\xf3\x30\x10\x86\xf7\x3a\xc5\xe0\xc5\x87\xbc\xf1\x01\xc2\x97\x86\xe0\x36\x90\x4d\x08\x25\x17\x90\xe4\xb1\x23\x2a\xcf\x08\x79\x44\x5b\x42\xee\x5e\x62\x63\xbb\x3f\x5a\x08\x89\x99\xe7\xe5\x7d\x7c\x1f\x39\x09\x14\x27\xa6\x43\xa6\xce\xdb\x80\x17\x7e\x43\x2a\xd4\x3c\x79\xf9\x30\x7d\x0c\x78\x3a\x5c\x0a\xa5\x62\xb6\xd0\x66\x82\xde\x78\xd2\xa6\x69\x12\x0e\xc3\x06\xf6\xd3\xa3\xdc\xc0\x91\x04\x6e\x0a\x00\x20\xa0\x80\x71\x8e\x33\x09\x6c\xa1\x43\xd9\x4f\x9f\x99\x2a\xd5\xb2\xe6\x38\x04\x74\xe2\x99\x5e\xb1\x85\xed\x8c\x8d\xf3\xc7\xa9\x3a\x94\xda\x44\x63\x7d\xf0\xf2\xa9\xd7\x42\x55\xbd\x90\xe7\x6c\x83\x77\x67\x23\xd7\x72\xe5\x2c\xa7\xc4\xef\xff\xff\xdd\x7e\xdb\xfd\x01\xef\x4f\x7a\xe5\x76\x3b\x88\x86\xbc\xd3\x45\xcd\x39\x34\x40\x2c\x30\x45\x81\x5b\x6a\x40\x9b\xb8\x87\x38\xd2\xdf\x0c\x8a\x29\x66\xbc\x12\x4a\x4e\xf4\x53\xef\xe1\x72\x7c\x1e\x74\x59\x05\xa4\x4e\xae\xea\xae\xbe\x02\x00\x00\xff\xff\xdc\x90\x01\x40\x83\x01\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0x41, 0xe7, 0xa0, 0xee, 0x5f, 0x97, 0x7a, 0xd8, 0x3, 0x9d, 0xaa, 0xb6, 0xd5, 0x6e, 0x78, 0x1a, 0x24, 0x76, 0xd0, 0x9c, 0xf7, 0xad, 0x72, 0x21, 0xc3, 0xd0, 0x2b, 0xd, 0xc0, 0xfa, 0x5a}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x6e\xf2\x30\x10\x84\xef\x7e\x8a\x21\x87\x5f\x89\xf4\x2b\x0f\x80\x08\x08\x51\xf5\xd6\xaa\x6a\x51\xef\x8b\xbd\x50\x4b\xc1\x8e\xd6\x1b\x50\x55\xf1\xee\x95\x09\x04\xaa\x1e\x7a\x89\xe2\xf1\xce\xcc\xe7\xf5\xfb\x2e\x8a\xa2\x78\x62\x25\x47\x4a\xef\x9e\x8f\xa9\x30\x57\x39\x1f\x5f\x39\xc5\xf6\xc0\x52\x18\xd3\xf5\x1b\x6c\xfb\x80\x3d\xf9\x50\x92\x73\x32\xc5\xd2\x39\xe1\x94\xfe\x23\xd0\x9e\xa7\x78\x53\xf1\x61\x57\xe5\x9f\x28\xb4\xe3\x17\xd2\x8f\x05\xbe\x0c\x00\xb4\xac\x50\x34\x58\x7f\x76\x3c\xfb\x51\x58\x3f\x3f\xae\x57\xb1\x6d\xd9\xaa\x8f\xe1\x81\x94\xe6\x65\x35\x7a\x36\x51\x24\x1e\xd9\xad\x62\x50\x21\x9b\x23\x76\xac\x4b\x6b\x63\x1f\xf4\x8c\x51\xd5\xf6\x72\x97\xea\x61\x7a\xf6\xef\x1e\x7d\x5e\x0e\x74\xf9\x5b\x61\xb1\x40\x47\xc1\xdb\xb2\xb8\xba\x60\x63\xdf\x3a\x84\xa8\xd8\xf0\xd8\x57\x54\x66\x64\x38\x78\x3e\xa2\xf9\x85\x52\xcb\xd0\x90\xcb\x4a\x1d\x90\xfd\xf6\x32\xdd\x20\xf8\xf6\xf2\x76\x40\x58\x7b\x09\x59\x3a\x0b\xa7\x5b\xb6\x75\x68\xce\x96\x09\x28\x4d\xf0\xc7\x66\xcc\x5d\x98\x75\x75\xba\xed\xd9\x9c\x0c\xbe\x03\x00\x00\xff\xff\x2b\xb5\x83\xaf\xd0\x01\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5c, 0x26, 0xdc, 0x82, 0xc5, 0x1c, 0x90, 0xfa, 0xcc, 0x28, 0x7e, 0x95, 0x7c, 0xe6, 0x60, 0x68, 0x56, 0x48, 0xb4, 0x65, 0x14, 0x58, 0xef, 0x2, 0xb1, 0x9f, 0x17, 0x9, 0x99, 0x6f, 0xe7, 0x2b}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x41\x6f\xe3\x36\x13\x3d\x5b\xbf\x62\x92\xc3\x07\x1b\xd8\x4f\xe9\xa1\xe8\xc1\xa8\x1a\x6c\x93\x6c\xb1\x40\xd6\x58\x24\xde\x5e\x82\x1c\x68\x69\xe4\x10\x91\x29\x95\xa4\x92\x35\x82\xfc\xf7\x82\xa4\x64\x92\x22\x69\xa7\xb9\x58\x9a\x79\x33\x43\x8a\xf3\x48\xbe\xd0\x5d\xd7\x72\x09\xe7\x37\x3f\xc9\xae\x6b\x70\xf5\x65\x7d\x9e\x8d\xb6\x6f\x28\x49\x45\x24\xf9\x9b\xe2\xab\x38\xcf\xb2\x8b\x8b\x0b\x58\x3f\x51\x01\xa2\xe4\xb4\x93\xb0\x45\x29\x80\x34\x0d\xc8\x27\x84\x17\x8a\xaf\xff\xdf\x10\x81\x15\xec\x86\x38\x20\x42\xb4\x25\x25\x12\x2b\x78\xa5\xf2\x49\xe3\x44\x87\x25\xad\x29\x56\xb0\xfa\xb2\xd6\x29\x09\xab\x80\xa3\xec\x39\x13\x40\x25\x10\x01\x04\x04\x65\xdb\x06\x41\x48\xde\x97\x32\xcb\xba\x7e\x33\x3c\xab\x28\x78\xcb\x00\x00\x94\xb1\x41\x09\x8c\xec\x70\x09\xf7\x92\x53\xb6\xf5\x1c\x15\x9a\x81\xd2\x96\x45\xfd\xf2\xa9\xdf\x6d\x18\xa1\x4d\xd4\xdb\xbe\x32\xe4\x4b\xf8\x5c\x55\x1c\x85\xf0\x03\xf7\x5d\xbc\x22\x6f\xf7\xa4\x91\x14\xc5\x12\x1e\xbc\xaf\x97\xdf\x69\xcf\xfe\xd1\x83\xe3\x4f\x89\x9c\x91\xe6\xc7\xdd\x6d\x34\x9d\x40\x4e\x49\xb3\xea\x77\x1b\x35\x92\x1f\x5f\x99\xfc\xed\x57\x0f\x50\xb6\x4d\x83\xa5\x9a\xe0\xf7\x7e\xd3\xd0\xf2\x3b\x91\x4f\x4b\xb0\xcf\x09\xf0\xbd\x6c\x39\xd9\xa2\x41\x3b\x2f\xa9\xdc\xbc\x7d\xa1\x15\xf2\x21\x3b\xa7\x2f\x44\x1e\xc5\xeb\xfa\xd1\x19\x4d\x41\xb7\x94\x3d\x63\xb5\x4e\x7d\xcf\x70\x0c\x1f\x0e\x58\xa5\xba\xc2\x42\xae\x4f\xf4\x87\x45\xde\x9c\x58\x28\xe7\xd3\xfe\xd3\x13\x8e\x5f\x77\x64\x7b\xaa\xfa\x9f\x84\x31\xe4\x1f\x41\xde\x2b\x12\x35\x62\x09\x6f\x06\x36\xc2\xdf\xfd\x66\xaa\xa8\x99\x89\xdf\x78\x37\xc6\xec\xf7\x2f\x27\x54\x8a\x29\x72\xad\xad\xd9\x6c\x36\xc2\x76\x58\x51\x12\xc0\xbe\x69\xeb\xa5\x83\x6b\x68\x89\x4c\xe0\x14\x78\x6b\xcc\x97\x99\xae\x4d\x19\x95\x73\xfd\xa4\xfe\x5c\xce\x7e\x3a\x58\x23\x84\xb5\xce\x80\xad\xd6\xe5\x53\xd5\xda\x59\x2d\xdd\x4e\xb1\x8e\xd3\x3c\xb5\xd8\x08\x49\xad\x33\xc6\x50\xeb\x3d\x45\xcf\x18\x32\xc5\xcd\x68\xd6\x14\x31\xd3\x43\x08\xa7\x70\x9a\x92\xc7\x4a\x7f\x0c\xbd\x8a\x2e\xf7\x51\x26\xc6\x60\x11\x1a\x46\x3f\x61\xc8\xc1\x18\x2c\x42\xc0\x68\xb6\x14\xfb\x9c\x16\x39\x4a\x3d\xa7\x85\x8f\xf0\xee\x53\x36\x9b\xcd\x66\x03\xe5\xa2\x8c\x33\x88\x91\x6c\x09\xae\xa9\x32\x8b\xe1\x80\x34\x0d\xda\xd4\xb9\x62\x1b\x14\x9a\x74\xbe\xc3\x21\x1c\x14\x2e\xfd\x7c\xd8\x81\x7a\x50\x58\x1a\xfa\x10\x4d\x41\x28\x0c\x15\x27\xd1\xfb\x4e\x57\x37\x64\xf4\x7d\x07\x22\x42\x61\x49\xe9\x43\x1c\xfe\x41\xe1\xb2\xd1\x87\xb9\x4c\x84\xc2\x23\xa6\x0f\x8c\x91\x12\x8a\x28\x57\x53\x81\x0e\x2d\xbd\xc8\xe9\x51\x1a\xab\xe9\x50\xd6\xaf\xea\x38\x8e\x0f\x38\x32\xd8\xe3\x01\x96\xa3\x91\x50\xeb\x3c\x35\xe4\x54\x9a\xc0\x9d\x4a\xb4\x32\x6d\xe8\x1b\x52\xe0\x6b\xaf\x35\xa3\xf6\x54\xe8\x8d\xd7\x31\x51\x7b\x72\x65\xed\xd6\xe1\xaf\xac\xb5\xa7\x42\x9d\xed\xc4\x0b\x75\xec\xc9\xaa\x66\x8b\xf1\x2b\x1a\xdb\x84\x0b\x66\x47\x51\x3c\x70\x8e\x75\xcb\x34\xbd\x93\x28\x92\x8e\x47\xf9\x6c\xa6\x1d\x66\x5b\x29\xcc\x8f\x35\x0f\x7b\x49\x31\xfc\xea\x64\xef\xd9\xbb\xb9\x6f\xd7\x3d\x83\x1d\xa1\x6c\x4e\xcc\xb1\x6a\xcf\x57\xa0\xd5\x78\xd6\x2d\x96\xce\x85\x5c\xdd\x05\x48\x59\xb6\x3d\x93\x50\x28\x75\xf0\xd9\xbc\x8c\x19\x16\xd9\x01\x66\xe7\x09\xc5\x18\x73\x98\x4b\xbe\x45\x79\x45\x3a\xb2\xa1\x0d\x95\xfb\xb9\x95\x26\xf9\x55\x84\xa4\x0b\x1b\xb7\x69\x39\x6f\x5f\x7f\xff\xdf\x9b\x13\x62\x1f\xa7\xc1\xef\x7f\xcc\x6d\xec\xe5\x25\x74\x84\xd1\x72\x7e\x7e\xd5\xf6\x4d\x05\xac\x95\x60\xd2\x01\x01\x8e\x35\x72\x64\x25\x82\x6c\xb5\x88\xb1\xc3\x3f\x77\x26\xc5\x6a\xe9\x2d\xe1\x30\x1e\x3b\x82\xb9\xfa\x70\xb4\x5a\x9c\x99\x98\x8b\x0b\xf8\x4b\xcb\x10\x84\x0d\x11\xb4\x84\x8a\x8a\xae\x21\x7b\xa0\xac\x6e\xf9\x8e\xe8\xcf\x53\xb7\x1c\xa4\x12\x5d\x4a\x2e\x8d\x95\x46\x60\x31\x39\x4a\xb6\x28\xaf\x8d\x6b\xce\x6a\x19\xa9\x63\xf6\xd8\x58\x05\x84\x2d\x7d\x41\xe6\x95\x19\xd0\x2a\x77\xac\xd4\xdd\xb8\x61\xbb\xc5\x26\xba\x26\x16\xe7\xf0\x70\x1a\xe9\xf0\x3c\x3d\x45\x6f\x2d\xfd\xf9\x3a\x4b\x61\x21\xa9\xf1\xfb\x79\x88\x24\xd3\xd1\xb0\x5a\x0e\x67\x78\x2a\xc5\xe0\x16\x93\xf2\xee\xe9\x93\x0a\xbd\xd7\x18\x27\xf0\x10\xed\x5f\x67\xcd\xd1\x69\x0e\xd8\xb3\x7c\xa0\x92\x37\xd3\xf5\xe1\x80\x55\x79\xd5\xdb\x3c\x4a\xb5\xe4\x4d\x06\x0a\x78\x33\x62\x42\xf5\xc2\x33\xaa\xfe\x08\x97\x22\x17\x26\x3e\x7f\xc6\xbd\x70\xae\x18\x41\x81\x87\x67\xdc\x3f\xfa\x9b\xb6\x9f\x41\x03\xce\xf2\x9e\x37\xc3\x96\x93\xcd\x66\x56\x97\xc4\x3e\x96\xb9\x23\x8d\xeb\x63\xd0\xc3\xa6\x16\x60\xcd\x75\x49\x63\x07\xe4\xb8\xcf\x05\xd0\xe1\xda\x64\xb0\x7a\x2c\xe6\x1f\x11\x8a\x05\x53\xb1\x32\x70\x4e\x5f\xa6\x12\x92\x65\x84\x38\xc6\xa8\x7e\x19\x71\x07\x53\xde\x73\x3a\x5f\x04\x82\x46\xff\x44\xe4\xcc\xf0\x90\xd3\x0a\x99\xa4\x35\x75\x41\x8e\xb4\x71\xe8\xeb\xd3\x75\x91\x50\x37\xce\x8b\x5a\x9c\x94\xcc\x99\x76\x77\xce\xf4\xe3\x29\xdd\x13\x70\x32\xef\x3e\xae\x84\xc2\x60\xf1\x5f\xb4\x51\xa4\xb6\xe3\x3f\x26\x97\x52\xa3\xb6\xc6\xe8\x32\x1c\x53\x55\xa9\x94\x16\x73\x2a\x65\x44\x7c\xa5\x67\xf8\xe1\xb4\x46\xa5\x85\xac\xf5\x3b\x3e\xa1\xda\xc2\xb0\x28\x0b\x12\x62\x2e\x8c\x4e\xf6\x62\x42\xe7\x45\x36\x1b\xeb\xce\x6b\xda\xe0\x94\x64\x09\x25\x18\x26\xda\x58\xf7\x89\x44\x87\x1d\x36\x30\x45\xc4\xa2\x7f\xba\xe4\xea\x48\xbe\xa5\x42\x3e\xfc\xf2\x18\x2a\x46\x19\x6a\x44\xf3\xe3\x8b\x42\xf7\x22\xb7\xc8\xde\xb3\x7f\x03\x00\x00\xff\xff\xe6\xe7\x90\xbb\xde\x15\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x2d, 0xd5, 0x9b, 0x4a, 0xdb, 0x21, 0xe8, 0xaa, 0x29, 0x83, 0x8d, 0x2f, 0xbc, 0x96, 0x3a, 0xf, 0x48, 0x65, 0xa6, 0x98, 0xd1, 0x3b, 0x0, 0x54, 0x19, 0x49, 0xc5, 0x5c, 0x97, 0x22, 0xa0}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x8f\xa3\x38\x10\xbd\xf3\x2b\x2a\x39\xac\x12\xa9\xc5\x69\xb5\x07\xb4\xec\x68\xb6\xa7\x47\x1a\x69\x36\x1a\x75\xf7\xcc\x65\x34\x07\x07\x2a\xe9\x52\x3b\x86\x35\x26\xdd\x28\xca\x7f\x5f\x01\x01\xdb\x60\x03\x9b\x53\x5c\xf5\xea\x03\xfb\x95\xfd\xe8\x94\x67\x52\xc1\xfa\xe1\x9d\x9d\x72\x8e\xbb\xcf\xcf\xeb\xa0\xb3\xfd\x83\x8a\xa5\x4c\xb1\x1f\x84\x6f\xc5\x3a\x08\xf2\x72\x0f\x85\x92\x65\xa2\x60\xf7\xf9\xb9\xb6\xc2\x25\x00\x00\xa8\x1d\x1c\x15\x50\x1a\xc1\xf7\x2f\x42\xfd\xf1\xbb\x65\x2e\x4b\x8f\x43\xb0\x13\x46\xf0\xa4\x24\x89\xa3\xe5\x48\xb1\x48\x24\xe5\x8a\x32\xe1\xf4\xab\x97\xf2\xb4\x17\x8c\xb8\xd3\x2b\xb3\x8a\x71\x45\x58\x44\xf0\xd3\xfa\x86\xf0\xb1\xf1\x54\xbf\x2c\x38\xbe\x2b\x94\x82\xf1\xef\x8f\x5f\x9d\xe9\x92\x8c\x73\x4c\xea\x5e\xbe\x95\x7b\x4e\xc9\x37\xa6\x5e\x22\xd0\xff\x3d\xe0\x27\x95\x49\x76\xc4\x16\x6d\x2c\x7c\xb9\x65\x76\xa6\x14\xe5\x2d\xbb\xa4\x33\x53\x93\xf8\xa6\xfe\xa2\x86\xbf\x92\x78\xc5\xf4\xb9\xca\xdd\x9b\x3d\xee\x61\x71\xc0\xce\x77\x80\x1a\xf2\x69\xe6\x28\x35\xf2\x61\xf1\x39\x3c\xfd\x5b\x32\x89\x5f\x4e\xec\x38\x57\xfd\x6f\x26\x04\xca\x25\xc8\xa7\x2c\x21\xc6\x8b\x08\x2e\x2d\xac\x83\x5f\x6d\xe2\x49\x46\xaa\x88\xc0\xa6\xd5\x73\x63\x0d\x1a\x24\x09\x52\x9b\xe6\x5f\xb3\xea\x89\x7f\xd7\xdb\xcc\x71\xd0\x56\x73\x16\xb4\xd5\x31\x08\xda\x39\x9a\x02\xed\x9a\x1f\x01\x8d\x75\xf0\x5f\x3b\xe7\xc8\xef\x42\xfa\x98\xef\xcc\xea\xa3\xbd\xbf\x85\xf9\x26\xc7\xfc\x9d\x2a\xbd\x0c\xbd\x73\x9e\xcf\x24\xcf\x5d\x30\x07\xc9\x9d\x5b\x38\x66\xb8\x0b\xe6\xa0\xb7\x33\x9b\x8f\xdb\x06\x97\xa6\x88\x5d\x03\xb6\xb7\xbb\xbe\xfe\x15\xc8\x0f\x21\xa5\x10\x03\xa5\xb6\xb1\xe6\x36\xc4\x0d\xc5\x6d\x47\x4d\x6f\x88\x1b\x96\xdb\x0e\x83\xe1\x10\x9b\x7c\xb7\x61\x3d\xd7\x21\xd6\xbc\xb7\x21\x3d\xe7\x21\xd6\xfc\xb7\x21\x06\xd5\x21\x36\x89\x6f\xc3\x5c\xa4\x87\xd8\x39\x0b\xbe\x40\x83\xf6\x56\xe4\xf0\x21\x70\xd5\x34\x46\xc2\xae\x6a\x38\xa6\x1b\x76\x34\x3b\x1d\xa0\x67\xc0\x11\xaa\x9d\x73\x2d\xfb\xd2\x8c\xdc\xbe\x44\xbb\x96\x26\xb6\xc1\x07\xfe\x64\x51\xc7\x69\xf7\x85\x3e\x58\x44\x70\xda\xbd\x27\xab\x47\xd3\x3e\x59\x6d\xf7\x85\x1a\xe3\x6a\x85\x1a\x76\x6f\xd5\x76\x84\xed\x8a\xad\x6d\x30\x28\xcd\xc8\xd6\x53\xa2\x67\xf7\x1a\x5c\x5b\xf5\x76\x28\x05\x9c\x18\x89\x0d\x4b\x53\x89\x45\x11\xc1\xc7\xf6\xcf\x9d\xf1\x52\x6d\xa3\x81\xbc\xab\x1f\x3e\x96\x24\x59\x29\x14\xc4\x70\x44\xf5\xb1\x5d\x74\x59\xb6\x41\x0f\xd3\xcd\x41\xdc\xc5\xf4\xfd\x85\x47\x54\xf7\x2c\x67\x7b\xe2\xa4\xaa\x8d\x96\x9c\xe1\xbd\x63\xb2\xb6\x3a\x6e\x9f\x49\x99\xbd\xfd\xf9\xdb\x65\xf0\x94\x61\x91\xf1\x33\x4a\x1d\x7d\xfd\x6b\xa3\xc3\x3e\x7c\x80\x9c\x09\x4a\x36\xeb\xfb\xac\xe4\x29\x88\x4c\x41\x9b\x09\x18\x48\x3c\xa0\x44\x91\x20\xa8\x0c\xd4\x0b\x1a\x9d\xaf\x8d\xef\x39\x13\xbe\x75\x65\xac\xbd\xbf\xf5\xf4\xc3\xf0\x6f\xea\x2d\xa4\x74\xbb\xd2\xe1\xe2\xa0\x9a\x7d\x8c\x07\xf7\xea\x11\xd5\x6d\x8b\x6f\x41\x77\x76\xa5\xc8\x5a\x3a\xf7\xd7\x7b\xa7\x43\x0c\x97\x56\xb4\x1c\x32\x09\xaf\x58\x01\x89\xae\x11\x73\x78\xa8\xc8\x39\xab\x56\x61\xd1\x26\x0a\x5f\xb1\x2a\x8c\x3b\x7e\x54\xe9\xe7\x2b\x56\xbf\xea\x2b\x7c\x36\x55\x83\x5c\x85\xa5\xe4\x37\xf6\xb5\xfd\x4b\x54\xa5\x14\x1d\xb7\x6c\x8d\xd4\x25\xa5\x74\xa8\x93\x3a\x4f\xbd\x1a\xaa\xa5\xce\x97\x76\x0d\xd4\x66\x8f\x78\x1a\x61\x0d\xaf\x53\x52\x8d\x02\x7a\x5f\x58\x4a\xda\x6c\x9d\x62\xab\x0b\xea\x4d\xab\xfa\xac\x1f\xbb\x95\x19\x65\xc9\xae\x2e\xce\x30\x36\x1b\x38\x27\xc4\x1c\x87\xc1\x14\x5b\x85\xf9\x72\x81\xe6\x4b\x51\xfc\x1f\xe1\xe6\xed\xc3\x40\x4d\x29\xba\xe9\xef\xd0\x03\x1e\x52\x8a\x42\xd1\x81\x50\x2e\x93\x7f\xd3\x89\x35\x72\x2e\xb1\x43\x2b\xce\x7d\xf3\xe2\xe4\x3b\x8b\xcc\x8e\xb9\xb2\x69\xed\xd1\x9c\x13\xf1\x4e\xaa\x7b\x34\xe9\x44\x1a\x83\x9c\x3e\x6e\x5a\xba\x75\xea\xa6\xd0\xb8\xf0\x40\x1c\x87\x23\xe5\x91\xb8\x13\x19\xf7\x1a\x37\x93\xb1\xbf\x39\x47\xa6\xb1\x1c\xee\x0a\xb6\xeb\x55\x0b\xd8\x06\xd7\xff\x02\x00\x00\xff\xff\xef\x90\x72\x3a\x37\x11\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6b, 0x93, 0x11, 0xb2, 0x9c, 0x79, 0xd9, 0xb, 0xf5, 0x1f, 0x32, 0x9e, 0xdf, 0xc9, 0x9d, 0x77, 0x76, 0x1b, 0xa, 0xd0, 0x67, 0x20, 0x26, 0x9e, 0x56, 0xcc, 0x76, 0xf2, 0x5c, 0xef, 0xb5, 0x13}}
	return a, nil
}

var _scriptsGet_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2d\xc8\x2f\x2a\x51\x50\x72\xad\x48\xcc\x2d\xc8\x49\xf5\x73\x0b\x51\xe2\xe2\x2a\x28\x4d\x52\x48\x2b\xcd\x53\xc8\x4d\xcc\xcc\xd3\xd0\xb4\x52\x08\xf5\xcc\x2b\x31\x33\x51\xa8\xe6\x52\x50\x50\x50\x28\x4a\x2d\x29\x2d\xca\x53\x40\x68\xd0\x2b\xc9\x2f\x49\xcc\x09\x2e\x2d\x28\xc8\xa9\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\xfa\x63\x9a\x5b\x52\x00\x00\x00"

func scriptsGet_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_total_supplyCdc,
		"scripts/get_total_supply.cdc",
	)
}

func scriptsGet_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x31, 0x3, 0x72, 0x86, 0x9, 0xe, 0x24, 0x19, 0x7a, 0xa4, 0x3e, 0x8d, 0x3, 0xad, 0xd9, 0x2e, 0xf, 0x59, 0x2e, 0xdd, 0xa9, 0xb7, 0x25, 0xa0, 0x36, 0x82, 0x1a, 0x39, 0x27, 0xc4, 0x40, 0x8}}
	return a, nil
}

var _transactionsNftforwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcb\x8e\xa3\x3a\x10\xdd\xf3\x15\xa7\x59\xb4\xc8\x86\xec\x51\x3f\xd4\x37\xba\x99\xd5\x44\xad\x74\x7e\xc0\x98\x02\xac\x38\x36\x2a\x4c\xd3\xa3\x56\xfe\x7d\xc4\x2b\x98\x4c\x94\xd1\x78\x91\x44\x71\x71\xaa\xce\xa3\x50\xa7\xca\xb2\x43\xb8\xb3\x66\xdb\x98\x42\xa5\x9a\x0e\xf6\x48\x26\x0c\xa6\x9b\xff\xbf\xc4\xa9\xd2\xb4\xdb\x1e\xe6\xff\x76\xdb\xc3\xd6\x72\x2b\x38\x53\xa6\x08\x83\x60\xbd\x5e\xe3\x50\xaa\x1a\x8e\x85\xa9\x85\x74\xca\x1a\xa8\x1a\x6d\x29\x1c\x84\x81\x90\xd2\x36\xc6\xa1\xb5\x8d\xce\xc0\x8d\xe9\x9f\x70\x16\xb2\x14\xa6\x20\xb8\x92\x30\x63\x12\x83\x49\xaa\x4a\x91\x71\x41\xe0\x41\x46\x86\xda\xfd\x74\xf3\x96\x65\x4c\x75\x9d\x60\xfc\xb1\xc2\x77\x10\x00\x40\x07\xbd\xa7\x9c\x98\x8c\xa4\xae\xc9\x05\x7d\x04\xdf\x53\x6d\x1b\x96\xd4\x57\x6b\x72\xc8\xa7\xbe\x7b\xca\x13\x3c\x2e\xd8\xc5\xfe\x5c\x17\xfc\x8d\xd5\x9a\x06\x9a\x2d\xa1\x55\x5a\x23\xa3\x5a\x15\x46\x38\x82\xa8\x27\x44\x65\x0a\x8f\xca\xd4\xce\x67\x31\x03\x25\xd8\x88\x4a\xa4\x4a\x2b\xf7\xeb\xe9\xf1\xfb\xda\x90\x78\xae\x7c\x6f\x52\xad\xe4\xf9\x65\xa0\x5b\x31\x55\x82\x29\xea\xba\x13\x27\x78\x6b\x5c\xf9\x36\xe8\xdd\x49\x82\xf1\xac\xd7\xf8\xcf\x32\xdb\x16\xec\x6b\x73\xa5\xba\x27\x4c\x77\x6a\xd2\x79\xec\xab\x83\x67\x0c\x7d\x2e\x25\xdd\x89\xd3\x1e\xf9\xe9\x8e\x72\x2f\x51\xce\xf6\x94\x60\x59\xf1\xe1\x2c\x8b\x82\xde\x85\x2b\x57\x0b\xc4\xd7\x57\x54\xc2\x28\x19\x85\x9b\x3e\x32\xc6\x3a\xa4\x7f\x19\x3f\x5c\x05\x3e\xdb\x1f\xe4\xb0\x27\x49\xea\x93\xd8\x93\x16\xdd\x1c\x7d\x24\xf8\x2a\x49\x53\x4a\x97\xec\x6f\x9b\x85\x67\x14\xe4\x46\x99\x6f\xc5\x72\x49\x27\x2e\xc8\xfd\xab\xbb\xd1\xbc\x78\x7f\xdc\x0e\x82\xf9\x6c\x7f\x8a\x23\xa1\x6e\x78\xd8\xa5\xeb\x7a\xc8\x99\xbf\xaa\xf1\x29\xb4\xca\x90\x52\x6e\x99\x70\x52\xc6\x75\x39\x1d\xb7\xe4\x02\xaa\x72\x3c\xdc\x51\x20\x96\x25\xc9\x63\xe4\x47\xac\x4f\xe3\xe4\xda\xdd\x01\x3a\x3b\xfb\x21\x1e\xc2\x59\xa8\x73\x30\x7c\xf6\x5f\xf4\x45\xb2\x71\xb4\x0c\xf0\xc7\xb0\x3c\x57\x2b\x75\x33\xa8\xf1\xf0\x66\xb9\x0c\xbe\xf0\x28\xb9\x67\xed\x6a\x1c\xe3\x1c\xfc\x0e\x00\x00\xff\xff\x7e\x60\xb2\xbe\x1c\x05\x00\x00"

func transactionsNftforwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingChange_forwarder_recipientCdc,
		"transactions/NFTForwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftforwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x34, 0xe3, 0x9f, 0xe4, 0xa9, 0x9e, 0x94, 0x52, 0xc0, 0xb5, 0xbc, 0xb7, 0xa1, 0x77, 0x30, 0x3a, 0x5d, 0xa2, 0x8a, 0xb5, 0x19, 0xa1, 0xdb, 0xc8, 0x4d, 0x55, 0xa8, 0x7, 0x9b, 0xc3, 0x96, 0x98}}
	return a, nil
}

var _transactionsNftforwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\x4d\x6f\xaa\x4c\x14\xc7\xf7\x7c\x8a\xa3\x8b\x3e\x98\xb4\xb2\x37\xd6\xa4\x31\x8f\x77\x55\xd3\x58\x73\xf7\xc7\xe1\x00\x13\x71\x86\xcc\x0c\xd2\xa6\xf1\xbb\xdf\xf0\x3a\x0c\xd8\xda\x26\x65\xa5\x70\x5e\xff\xe7\x37\x07\xf8\x29\x93\xca\xc0\x74\x2b\xc5\x26\x17\x31\x3f\xa4\xb4\x97\x47\x12\x53\xaf\x7d\xf2\x4c\x06\x43\x34\xf8\x97\x53\xa1\xed\xed\xff\xdf\xf0\x94\xa5\xb4\xdd\xec\xed\xbd\xed\x66\xbf\x91\xaa\x40\x15\x72\x11\x4f\x3d\x2f\x08\x02\xd8\x27\x5c\x83\x51\x28\x34\x32\xc3\xa5\x00\xae\xa1\x48\xd0\x00\x0a\x40\xc6\x64\x2e\x0c\x14\x32\x4f\x43\x50\xb9\xa8\x3c\x8c\x04\x4d\x06\xb8\xd1\x94\x46\x90\x67\xe5\x8d\xa8\x0e\x0b\xdb\xcd\x5e\x97\xff\x11\x42\xd2\x3c\x16\x68\x28\xac\x9c\x14\x31\x9e\x71\x12\xe6\x3f\x0d\x4c\xa6\x29\x55\xc9\x3c\xaf\x97\xd9\xef\x6c\x9e\xc2\x50\x91\xd6\x0b\x68\x7e\xcc\xe0\xc3\xf3\x00\x00\x32\x45\x19\x2a\xf2\xcb\xd0\xa4\x16\xf0\x94\x9b\xe4\xa9\x2e\xb2\xb4\x81\xe6\x0a\x02\x58\x27\x28\x62\xb2\x69\x01\x45\x08\x8a\x4c\xae\x04\xf0\x08\x4c\x42\x5d\x77\x98\x2a\xc2\xf0\x1d\x12\xd4\x65\xd3\x56\x24\x52\x5d\x44\x1e\x41\x9d\x73\x7e\x90\x4a\xc9\x62\x79\xe7\x68\x39\xef\x3b\xad\xfc\x48\xc9\xd3\x02\x5c\x8b\x57\x23\x15\xc6\xf4\x82\x26\x99\xc1\xe4\x11\x04\x4f\xdb\xae\xda\x2b\x25\xd3\x0a\x49\x6a\x47\x11\x3c\xfe\x66\xd2\xc9\x28\x97\xa0\x62\xd7\xea\xb3\xee\x66\x02\x8f\x10\x93\x69\x54\x1d\xcd\x64\xe6\x44\x29\xaf\x79\x4c\x66\x8d\x19\x1e\x78\xca\xcd\xfb\xf2\xee\x63\x88\xea\xdc\xc6\x7e\xc9\x0f\x29\x67\x97\x95\x6f\xe9\x1c\x3d\xad\x8a\x75\x85\x09\x02\x78\xc6\x23\x81\xce\x15\x55\xa3\x1b\xfa\x00\xeb\x0a\x28\xf9\x3d\x63\xca\x43\x38\x50\x24\x15\xc1\x89\x0b\xc3\x45\x5c\xf9\x6d\x37\x7b\x27\x30\x8f\x60\x72\x5d\x85\x39\x4b\x88\x1d\xfd\x3e\x55\xed\x95\xa1\xe0\xcc\x9f\xee\x7a\x44\xdf\xa8\x47\x48\x53\xd7\x34\x99\xba\xfa\x5d\x46\x7d\xbe\xd6\x73\xb1\xe0\x3a\x06\x7d\x3a\xe6\xac\x42\xbc\x2b\xc3\xef\x37\xb2\xf8\x64\xb8\x6e\xfa\xfa\x3c\x78\x57\xaa\x09\x02\xf8\x43\x06\x76\xc4\x88\x9f\x49\x81\x1d\x30\x94\x9c\x55\x62\x0e\xd1\x68\x0f\x94\xd7\x67\x4c\x8d\x6b\x58\x63\xf6\x13\xc6\x06\x7c\x8d\xc6\xf1\x1d\xe0\x1c\xa7\x95\x3f\x8a\x71\x03\x47\xc7\x7e\xe6\xa8\xf4\xfb\x5c\x96\x4c\x5e\x57\xcd\x32\xd9\x32\xf8\x03\xee\x06\xd3\x5d\x2b\x42\x43\x80\x15\x6c\xfd\x45\x02\x8a\xb4\xcc\x15\x23\x67\x8c\x1d\x78\xb0\x7c\x18\xec\x18\x56\x45\xda\x52\xd1\x8f\x62\x67\xba\xf8\x04\x01\x57\x46\x8d\x67\x02\x6e\xca\x57\x47\x6f\x35\x77\x16\xcd\x1a\x2c\xad\xfc\xe5\x43\x57\xcc\x3d\x18\xf9\xd5\xca\x73\x52\xe4\x22\xe5\xe2\x08\xf4\xc6\x75\xa5\x7b\x6f\xe3\x75\xaa\x71\xd2\x35\xdf\x57\x66\x6f\x5f\x01\x0e\x90\xb7\x57\x99\x03\x73\x35\xc2\xe5\xdd\x78\xab\xdc\x84\xf8\xfe\x2b\x6a\xed\xcf\xdb\x6e\xce\x07\xc3\x7c\x47\x5a\xa6\x67\x52\xd6\xcf\xdd\x50\xab\xd1\x0e\x6c\x54\xa8\xf5\xfc\x7e\xfb\x2e\x7f\xac\xe5\x2f\x1b\x81\x1b\x49\x55\x41\x60\x99\x2b\x12\x6a\x0e\x98\xfd\x74\x68\x3e\x4a\x0e\x34\x84\xa4\xac\xea\xda\x5b\xa8\xdd\x65\x97\xc1\xf9\xbf\xd1\x80\xab\x9f\x41\x15\x93\xf9\x82\xb9\xce\xba\x6e\xfc\xe2\x5d\xbc\x7f\x01\x00\x00\xff\xff\x26\xf9\x97\x08\xc3\x09\x00\x00"

func transactionsNftforwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingCreate_forwarderCdc,
		"transactions/NFTForwarding/create_forwarder.cdc",
	)
}

func transactionsNftforwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfe, 0x76, 0x5b, 0xf3, 0xca, 0xd2, 0x7b, 0x30, 0x4d, 0x3e, 0x3b, 0x74, 0x14, 0x37, 0x4d, 0x63, 0x35, 0xd2, 0xda, 0x72, 0x43, 0x6c, 0x42, 0x85, 0x1c, 0xac, 0xb1, 0x66, 0x79, 0xe7, 0x22, 0x30}}
	return a, nil
}

var _transactionsNftforwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xcb\x6e\xdb\x3a\x10\xdd\xeb\x2b\xe6\x6a\x71\x23\x03\x8d\xbd\x29\xba\x10\xf2\x40\x90\x34\x40\x36\x69\xe0\xba\x1f\x40\x53\x23\x89\xad\x3c\x23\x90\xa3\x38\x41\x90\x7f\x2f\xa8\x07\x2d\xd9\x72\xb9\xa2\xcd\x79\x9c\x39\xe7\x8c\xcc\xae\x66\x2b\x10\x3f\x33\x3d\x36\x54\x98\x6d\x85\x1b\xfe\x83\x14\x47\xc3\xcb\xf7\x37\xb5\xab\x2b\x7c\x7e\xdc\xc4\x51\xb4\x5a\xad\x60\x53\x1a\x07\x62\x15\x39\xa5\xc5\x30\x81\x71\x90\xb3\xed\xfe\xca\xd1\x5a\x43\x05\x28\x82\xe7\xc7\x0d\xe4\x96\x77\x6d\x12\x13\x82\xd2\x9a\x1b\x12\x10\x06\x45\x2c\x25\x5a\x68\x9c\x0f\x96\x12\xc1\xa2\x36\xb5\x41\x92\x0b\x07\x6b\xd4\x68\x5e\xd1\x82\x45\xc7\x8d\xd5\xd8\x96\xd8\x97\x46\x97\xbe\xd9\x8e\x2d\x42\x65\x76\x46\x30\x03\x29\x15\x81\x82\x7b\xae\x2a\x6c\xe1\xbc\x34\xdb\xca\x68\x58\x0f\xa9\xd1\x08\x6a\x12\xba\xa4\x70\x97\x65\x16\x9d\xfb\x02\x7b\x23\x65\x66\xd5\xfe\xe9\x21\x85\x5f\x4f\x24\xdf\xbe\x2e\xe0\x23\x8a\x00\x00\x7c\xdb\x35\xe6\x68\x91\x34\x7a\xdc\x1e\xe9\x10\x8f\xf6\xc2\x81\x0e\x7d\xdb\x84\x0a\x25\xbc\xaf\x31\x4f\xe1\xff\x03\x7d\xcb\x03\xc6\xb9\xea\x9c\xb7\xd5\xc3\xec\xc2\x90\x61\xcd\xce\x48\xfb\xbf\x67\x53\x38\x34\xe9\x9f\xba\x1e\x1f\xc7\xea\x2d\x87\x2a\x9f\x5d\xa7\xda\x62\xad\x2c\x26\xce\x14\x84\x36\x85\xbb\x46\xca\xbb\x4e\x0d\x3f\x2b\xf4\x67\xb5\x82\x2d\x5b\xcb\x7b\x50\x60\x8f\xc7\xee\x72\x2f\x5c\x8b\xe4\x68\x6c\x7f\x1c\x56\xf9\x72\x34\x3b\x5c\xf7\x29\x21\xc2\x9f\x65\xd7\xe0\x6a\x9e\x97\x9b\xc4\x1b\x26\x85\xd9\xc7\x9f\xc2\x56\x15\xf8\xa2\xa4\x5c\x4c\x6a\xde\xde\x42\xad\xc8\xe8\x24\xee\x67\x82\x8c\xd1\x01\xb1\x80\x13\xef\x15\x45\xc0\xdb\xdf\xa8\x05\x54\x47\xa6\xab\x51\x9b\xdc\x60\x06\xb5\x92\x32\x5e\x44\x63\x0a\x0a\x94\xa9\x23\x1d\xd4\x9d\xa7\x06\x03\x77\xc5\x42\x8e\xd7\x23\x04\xc3\xb5\x2f\xd0\x03\x39\xf8\x6d\xda\x22\xb0\xdc\x17\x3e\x21\x7b\x6e\x1b\xa6\x4c\x1f\x0c\x00\xd7\x87\xf0\x29\xd7\x05\xca\xbd\xaa\xd5\xd6\x54\x46\xde\x93\x59\x52\xbb\x6d\x39\xe5\x34\xe8\xf4\x0f\x6f\xdd\x24\xe7\x74\xb8\xe7\xa6\xca\x5a\x01\xce\xfb\x69\x6e\xc4\xb8\x2b\xd8\xbb\x16\xdf\x50\x37\x82\xc3\x32\xf6\xdc\x0d\x16\x0b\x5b\xe1\x2d\xd3\xfe\xe0\x3d\xcd\xed\xe4\x20\x11\xe5\x02\x57\x97\x27\x3e\x0d\xf7\x64\xfc\x21\x38\xdc\xa7\xca\x3d\x1c\xad\xa4\xa1\xe9\x30\xe7\x44\x1a\xae\x89\x78\x0e\x53\xb8\xba\xa4\x5c\x26\xd3\xd6\xec\x64\xb4\x8b\xff\x9d\xe0\x2c\x50\x9e\x1e\x5c\xb2\x58\x6a\x26\x51\x86\xdc\x08\xf0\x22\x85\xf8\x87\x35\x85\x21\x55\x75\x3c\x80\x2b\x83\x08\xa5\x7a\xc5\x80\x58\xd1\xbb\xff\x80\xc6\x7d\xef\xcf\xe8\x6f\x00\x00\x00\xff\xff\xc8\x6d\x6a\x5f\x03\x06\x00\x00"

func transactionsNftforwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingTransfer_nft_to_receiverCdc,
		"transactions/NFTForwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftforwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0x8b, 0x63, 0xf8, 0xcb, 0x20, 0xee, 0xd4, 0x10, 0x37, 0xef, 0x6f, 0x84, 0xf7, 0xde, 0xa6, 0xb3, 0x6b, 0xb3, 0x8e, 0x17, 0xef, 0xaf, 0xc9, 0x7b, 0x4a, 0x46, 0x64, 0x82, 0x5b, 0x83, 0xa5}}
	return a, nil
}

var _transactionsNftforwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x8a\xdb\x40\x0c\xbd\xcf\x57\x88\x1c\x8a\x03\xc1\xbe\x2f\x65\x61\x59\x9a\x5b\xc3\xb2\x4d\x7b\x57\xc6\xf2\x58\x64\x32\x63\x64\x4d\xd2\x25\xf8\xdf\x8b\xed\x6e\xec\x84\x2c\xdb\x43\xe7\x64\xe4\xf7\xd0\x7b\x7a\x12\x1f\x9a\x28\x0a\x8b\x4d\x0c\xeb\x14\x1c\xef\x3c\x6d\xe3\x9e\xc2\xc2\xbc\xff\xf9\x4e\x8a\x25\x2a\xfe\x62\x3a\xb5\x53\xf9\xdb\x6f\x3c\x34\x9e\x36\xeb\xed\x54\xdb\xac\xb7\xeb\x28\x27\x94\x92\x83\x5b\x18\x53\x14\x05\x6c\x6b\x6e\x41\x05\x43\x8b\x56\x39\x06\xe0\x16\x4e\x35\x2a\x60\x00\xb4\x36\xa6\xa0\x70\x8a\xc9\x97\x20\x29\x0c\x0c\x8d\xe0\x39\xec\x01\xc1\x46\xef\x69\x64\x69\x04\xd6\x16\x9a\xb4\xf3\x6c\xa1\xd5\x28\xe8\x68\x80\x63\xa5\x24\x50\xe3\x91\x83\x03\x1b\x43\xc5\x2e\x09\x95\x03\x7c\x12\x44\x62\xcc\x5c\xc5\xd9\x18\x00\x80\x46\xa8\x41\xa1\xac\x65\x17\x48\x1e\xe0\x29\x69\xfd\x34\xaa\x5a\xc2\x79\x80\xf4\x8f\x2b\x18\x11\xb9\x23\x7d\xc6\x06\x77\xec\x59\xdf\xb2\x69\x08\xf9\xf3\x45\xeb\xcb\xa0\xf1\x05\xb5\x5e\xe6\xb6\x26\xbb\xff\xfa\xe5\x3c\x03\x4e\x9f\xb7\x94\xee\x31\x9b\x37\xed\x9f\x8f\x2e\x5b\x4c\x38\x40\x2f\x84\xe5\xdb\xdc\x67\x15\x05\xa6\x96\x8b\xe5\x15\x5f\x48\x93\x84\x4b\xa9\x33\xff\xcf\xd2\xed\xc6\xe4\xaf\x64\x89\x8f\x24\x1f\xd9\xf8\x19\xfa\x58\xfb\x94\xe6\xb1\x40\x25\xf1\xf0\xb1\x81\xbf\x1a\xd3\xc0\xfd\x54\xdc\x3d\xa3\x45\x01\x56\x08\x95\x00\xdf\xd7\xc7\x5e\xec\x0e\xd3\xd3\x9a\x66\xab\x66\x6e\x5a\xf7\x8d\xef\xd9\xbd\x15\xb0\x82\x7f\x0a\x79\x05\x57\x07\x95\xbf\x52\x1b\xfd\x91\x64\xc2\x75\x8f\xd9\xd5\x08\x3e\x31\xbd\xba\x02\x2b\x8a\x23\x7d\xb8\x4f\xfa\x31\x9e\x4d\xcf\xba\x90\xc6\x99\x75\xa6\x33\x7f\x02\x00\x00\xff\xff\xc4\x32\xb8\x6b\x0b\x04\x00\x00"

func transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
		"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftforwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x2e, 0x83, 0xfa, 0xa5, 0x43, 0x61, 0x33, 0x86, 0x68, 0x3d, 0x6b, 0xe5, 0x7, 0xbb, 0x6b, 0xcd, 0xa5, 0xf8, 0x4a, 0x50, 0x35, 0xe3, 0xe8, 0xd4, 0xda, 0xb4, 0x26, 0x31, 0xa3, 0x69, 0xd8}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x6f\x9c\x30\x14\xc4\xef\x7c\x8a\x29\x87\x16\x0e\x25\x97\xaa\x07\x94\x36\x8a\xba\x5d\x69\x2f\xab\x2a\xa5\x1f\xc0\xd8\x8f\xb5\x5b\xaf\x1f\xb2\x1f\x25\x55\x94\xef\x5e\xb1\xb0\x7f\x12\xad\xe2\x0b\x08\x3f\xcf\xfc\x3c\x83\xdb\xf7\x1c\x05\xf9\x96\xc3\x7a\x08\x3b\xd7\x7a\x6a\xf8\x0f\x85\x3c\x3b\xee\x7c\x7f\x54\xfb\xde\xd3\x76\xdd\xe4\x59\x76\x73\x73\x83\xc6\xba\x04\x89\x2a\x24\xa5\xc5\x71\xc0\xe8\xc4\x9a\xa8\xc6\x04\x15\xb0\x5d\x37\xe8\x22\xef\x21\x96\x90\xdc\x2e\x50\x4c\xd0\xec\x3d\xcd\xc3\x2a\x18\x18\x4a\x12\xf9\x5f\x82\x93\x2c\xbb\x50\x2a\x9c\xa9\xf1\x6b\x13\xe4\xf3\xa7\x12\x4f\x59\x06\x00\x93\xe3\x03\x75\x14\x29\x68\x82\x58\x25\x18\x9d\xf7\x68\x09\x43\x22\x83\x8e\xe3\xc1\x8a\xc7\x40\xf1\xc3\xa5\xd5\xe1\xb8\x27\xb9\xf8\xf4\x40\x5d\x8d\xf7\xe7\x1b\x55\xdf\xce\xd3\x87\xf1\x3e\x52\xaf\x22\x15\x33\x78\x8d\xfb\x41\xec\xbd\xd6\x3c\x04\x39\x11\xcd\x54\x68\x39\x46\x1e\xa1\x10\xcf\x74\xfc\x16\xca\xb4\x12\xf9\xae\x7a\xc1\x83\x2f\x4b\x4a\xd5\x2c\x78\x7b\x1d\xef\x6b\x31\x85\x5a\xe3\xea\xe6\x4f\xe1\xa8\x76\xf4\x43\x89\x2d\x4f\x56\xd3\xba\xbb\x43\xaf\x82\xd3\x45\xbe\x5c\x02\x86\x29\x21\xb0\x20\x09\x47\x9a\x0a\xe3\xf6\x37\x69\x81\x92\xb9\xb1\x9e\xb4\xeb\x1c\x19\xf4\x4a\x6c\x5e\xce\x57\x7e\x9e\x1f\xf4\x48\x7a\x10\x7a\x15\xc4\xb1\xfe\xc3\xf9\x17\xf5\xbf\x11\xc4\xd4\x4b\xe8\x04\xb7\x1f\xaf\x64\x52\x1d\x25\x8b\xe3\xcb\x66\x55\xc3\x99\xf2\xec\xbb\xfc\x42\x93\xc6\x25\x61\xcf\x49\xf0\x74\x9a\x7a\x77\x45\x7b\x47\xb2\x59\xa5\xa2\xac\x34\x07\x51\x2e\xa4\xc2\x99\xb2\x46\xde\x2c\xf4\x93\xe5\xab\x28\x36\x2b\x24\xcb\x83\x37\xb0\xea\x2f\xa1\x25\x0a\x30\xe4\x49\xc8\xe4\x8b\xfb\x73\xf6\x3f\x00\x00\xff\xff\x86\x88\x22\xfb\x4a\x03\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb1, 0xc, 0xed, 0xc4, 0x7e, 0x34, 0xb6, 0x79, 0x0, 0x2c, 0x50, 0x43, 0x8, 0xa7, 0xa, 0x65, 0xeb, 0x7b, 0x80, 0x33, 0x56, 0xf8, 0x76, 0xf5, 0x73, 0x1c, 0xce, 0xfe, 0x27, 0x30, 0x29, 0xbc}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x5d\x4f\xe3\x3a\x13\xbe\xcf\xaf\x98\xed\x05\x9b\x6a\x51\xfb\x22\xad\xf6\x22\xda\xb2\xe2\xe3\x45\xe2\x02\x84\xa0\x7b\x6e\x10\x17\x8e\x33\x4d\x7c\x70\xed\x1c\x7b\x52\xa8\x10\xff\xfd\x28\xb6\xf3\xe1\x92\x45\xc7\x17\x90\xda\x33\x8f\x3d\xcf\x3c\x33\xb6\xd8\xd6\xda\x10\xcc\x6e\xb5\xba\x6a\x54\x29\x72\x89\x6b\xfd\x8c\x6a\x96\x74\x2b\xff\x7f\x65\xdb\x5a\xe2\xed\xd5\x7a\x98\xbb\x41\x62\x05\x23\xf6\x97\xc0\x17\x3b\x4c\x1f\x20\x24\xcb\xe5\x12\xd6\x95\xb0\x60\xb9\x11\x35\x41\x63\xd1\x02\x55\x08\xb7\x57\xeb\x1b\xa1\x08\x0d\x18\xb4\xba\x31\x1c\x81\x34\x6c\x85\x22\x60\xa0\xf0\xa5\x35\x70\xde\xd7\x04\xdb\xc6\x12\xe4\x08\xa6\x51\xf0\x22\xa8\x72\x00\x8c\x73\xdd\x28\x02\xaa\x18\x41\xc5\x3c\xea\x36\x86\x74\x00\x96\xb4\xc1\x02\x84\x82\x65\xfb\xc9\x4a\x5c\xf6\x9b\x27\x09\x19\xa6\x2c\xe3\x24\xb4\x4a\x13\x00\x00\x83\x5c\xd4\x02\x15\x65\x70\x56\x14\x06\xad\x3d\x76\xf3\x8a\x6d\x31\x83\x07\x32\x42\x95\x7e\xa6\x40\x1f\x94\xd0\x2a\x5e\xa0\xaa\xd9\xe6\x8a\x09\x19\x4f\xf3\x86\x6c\x06\x8f\xbf\xaf\xc4\xeb\x8f\xef\x4f\x7e\xce\xe8\x3d\x93\xb4\xbf\x1c\xa0\x5a\x13\xef\x15\x9b\x9c\xa3\xc2\x8d\xe0\x82\x19\x81\xad\x4d\x38\xdc\x13\x24\x73\x78\x4b\x9c\x65\x1b\xad\xd4\x9c\x49\xd8\x31\x23\x58\x2e\x11\x36\xda\x38\x02\x84\x2a\x63\x82\x36\x68\x50\x71\x74\x7e\x12\x29\x2c\x64\x70\x34\x24\x7b\x31\xa2\xa9\x83\xbf\xef\x1c\xdb\x6c\xb5\x80\x06\x39\x8a\x1d\x9a\xaf\x16\xb8\x96\x12\x1d\x93\x3d\x6a\x4f\xe6\x45\xbf\x76\x8f\x9b\x0c\x8e\xde\x0e\xd5\xb6\x18\x2c\xee\x9a\x5c\x0a\xfe\x3e\x6c\x7a\x67\x70\x27\x74\x63\x5b\x4d\xc0\xf5\x25\xe4\xb8\xd1\x06\xdd\xf6\xa3\xf4\x01\xbe\x22\x6f\x08\x6d\x14\x93\x50\xe5\xf5\xe5\xb9\x73\xc8\xe0\xf7\xb5\xa2\x1f\xdf\x3d\x70\x6d\xb0\x66\x06\x53\x2b\x4a\xd5\x06\x7e\xd6\x50\x75\xe6\x35\xd5\x12\x0a\x61\x58\x94\x9b\xc5\x01\x10\xac\x60\xc4\x12\x69\x62\xf2\xa1\xa9\x6b\xb9\x4f\x7a\xb7\xe5\x12\x72\x6d\x8c\x7e\x01\x36\x90\xdd\x71\x36\xa1\x7d\xa1\x20\x88\xf3\xe3\xce\x68\x60\x05\xfe\x98\x0b\x0f\xfa\x73\x32\x4b\xa7\xe9\xc6\xe8\x6d\x36\x3e\x9b\x5f\x78\xf0\xc8\x77\x8c\xaa\x79\x0f\xdf\x8e\x5f\xbf\xa0\x66\x4a\xf0\x74\x16\x22\x87\x42\xa3\x05\xa5\xc9\x57\x0d\x30\x05\x3a\xff\x1b\x39\x01\x23\x77\x74\x5b\x23\x17\x1b\x81\x05\xd4\x8c\xaa\xd9\x3c\x8a\xf8\xdc\x47\x1c\x64\xe1\x13\xff\xd5\x42\xed\xf2\xe9\x92\x37\x48\xe4\x40\x82\x7d\xc0\xd3\x8a\x81\x15\x94\x48\xe1\x90\x69\x6f\x13\x47\xb3\x28\x91\x2e\x58\xcd\x72\x21\x05\xed\xd3\x11\x0d\x87\xda\xfa\xc8\x44\x4f\xec\x7f\x10\xe6\x69\xfa\x27\x16\x2f\x74\x23\x0b\x47\x5f\xe9\xc5\xef\x4a\x63\x52\x00\x30\xc0\xce\x3c\xdc\x7b\xaf\xcb\x91\xfc\xda\x9e\xb1\x90\xa8\x4a\xaa\x60\xb5\x9a\x6a\x17\xdd\xea\xd1\xd1\x1f\x8c\xa3\xc6\x11\x96\x33\x98\x9d\x19\xc3\xf6\x10\xac\x6d\xe5\x4e\x9e\x23\xe0\x3f\x0d\x93\xae\x6d\x04\x77\x30\x28\x19\x61\x01\x05\x12\x13\xd2\xce\xc6\x87\x0d\x25\xd7\x35\xa0\xa0\x83\x0b\x83\x8c\x7c\x7d\x76\x20\xc1\xb9\xb7\xda\x31\x03\x5e\x71\x2b\xf8\x5f\x34\xeb\x3d\x7c\x8f\x8b\x2e\x99\xc5\xbd\xc7\x7a\x82\x15\x3c\x3e\xf5\x3e\x2f\x95\x90\xf8\x59\xac\x70\x1a\x76\x7a\x8b\xb2\xd6\x36\x88\xbc\x37\xdf\xc3\x34\x5f\x8f\xce\xf5\xe9\x33\xcf\x41\x72\xb1\x4a\x47\x26\x9f\xe9\xf4\xe7\xd1\x5b\xac\xb7\xfb\x20\x9b\xf7\xd3\x34\x8e\xbf\x44\x0a\x14\x74\x26\x83\x9a\xd3\xf9\xa8\x14\x43\x1a\x6e\xd8\x33\x82\x6d\x4c\x9c\x09\x3e\x1c\x57\x58\xd8\x31\x29\x8a\xae\xa1\x86\x36\xd7\x49\x34\xc2\x13\x1b\xf8\x32\x19\xf4\x82\x57\xc8\x9f\xd3\x39\xbc\x75\x55\x70\x3e\x62\x35\xde\xad\xad\x0c\xb7\xe3\x97\xd9\xbc\x93\x50\x37\xfa\xbc\x2f\x58\x5d\xa3\x2a\xd2\x68\xb5\x1d\x93\x6a\xf8\x68\x06\xfe\x12\x77\x04\x65\xd3\x89\x3a\x9e\x74\xe2\x0d\x65\xae\x86\x42\xd2\xa7\xad\xa2\x5b\x7f\xa2\x1e\xa7\x14\xd3\x8e\x58\x03\xf1\xaf\xae\x12\xfc\xff\x6f\x70\xd2\xaf\xbe\x27\x49\x54\x5a\x6d\x43\xef\x5b\x08\x53\x6d\x55\xd6\xda\x0a\x02\x41\xa3\x1b\xb9\x6f\xbd\x07\x57\x32\xc4\xd7\x8a\xfb\x77\x7b\xb5\x8e\x39\x1c\x3d\x80\x3e\xe9\xc8\x31\x39\xfe\x71\xd4\xfe\x8d\xe7\x23\xb2\x46\x3f\x62\xab\xd1\x7b\xa9\xff\x3c\x9e\x16\x47\x36\x7c\x26\x31\x97\x5d\xfb\xd4\x96\x0e\xaf\xef\xe9\x08\xda\x7a\xba\xbe\xb4\xe9\x7c\xc1\xb5\x22\x26\x94\x4d\xa7\x2e\xfb\x79\x06\xb3\x75\x85\xa0\xf0\x95\xba\x07\x48\x68\x97\x15\xdb\x21\xe4\x88\xca\xbf\x9e\x8a\x90\x10\xd9\x2a\x0f\x8b\x59\x7f\x88\xe9\xc7\x42\xdb\xa2\x27\x5f\x17\xdf\xe0\x24\xec\xe9\xac\xc1\x7a\xf3\x0f\x9b\x0a\xc5\x0d\x32\x8b\x05\xe4\x7b\x38\xe9\xfa\xf2\x7b\x02\xff\x06\x00\x00\xff\xff\x5b\x6d\x1e\x99\xd2\x0b\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x72, 0xe7, 0x6a, 0xce, 0xf, 0xbf, 0xf7, 0x53, 0xd6, 0x23, 0x95, 0xfa, 0x87, 0xcd, 0xba, 0xfe, 0x17, 0x4e, 0x69, 0x8e, 0x35, 0x70, 0x8c, 0x94, 0x17, 0xc6, 0x49, 0xda, 0x4, 0xdf, 0x6f, 0x7e}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xda\x40\x10\xbd\xef\xaf\x78\xe5\x10\x81\x44\xf0\x3d\xa2\x91\xa2\x28\xdc\x8a\xa2\x14\xf5\x3e\x2c\x63\xbc\xca\xb2\x6b\xcd\x8e\x71\x11\xe2\xbf\x57\x36\x89\x3f\x5a\xa4\x66\x4f\xd6\xec\x9b\xf7\xe5\x75\x87\x32\x8a\x62\xb2\x8e\x61\x55\x85\xbd\xdb\x7a\xde\xc4\x77\x0e\x13\xf3\x79\xf3\xf2\x9b\x0e\xa5\xe7\xf5\x6a\xd3\xcf\x7e\xb0\xd2\x8e\x94\x7e\x39\xae\xd3\xc4\x98\x2c\xcb\xb0\x29\x5c\x82\x0a\x85\x44\x56\x5d\x0c\x70\x09\x75\x41\x0a\x0a\x20\x6b\x63\x15\x14\x75\xac\xfc\x0e\x52\x85\x76\x43\x23\x12\x2b\x9c\x26\xf6\x39\xaa\xb2\x19\x08\x5b\x76\x47\xc6\x7a\xb5\x49\xc6\x0c\xe9\xce\xc6\x00\x40\x29\x5c\x92\xf0\x34\xb9\x7d\x60\x79\xc0\x53\xa5\xc5\xd3\x95\x7e\x86\x73\x0b\x69\x4e\x96\xe1\x8d\xb5\x92\x00\x26\xf1\x27\xb8\x1c\x5a\x70\x67\x84\xbc\x30\xed\x4e\x28\x28\x81\x60\xa3\xf7\xdc\xaa\x74\xfb\x2e\xc7\x55\x61\xb1\x8d\x22\xb1\x5e\xde\xf5\x3d\x2c\x9e\x3b\xfc\xe3\x34\x97\x78\x78\xc0\xcd\xcb\x9f\x1a\x85\xf6\xfc\x4a\x5a\xcc\xf0\xed\x3b\x82\xf3\x03\x87\xcd\x91\xd6\x62\x37\xba\x98\xa1\xff\x67\x61\x52\x06\x21\x70\x0d\x3e\x94\x7a\xba\x65\xd4\xb3\x0e\xc6\x58\xde\x0f\xbd\xd8\x96\xe2\xa5\xd9\xed\x6d\x4d\x67\x23\x99\x44\x47\x86\xd3\xa6\xfc\x41\x43\x1d\xe2\xa3\x85\x06\x35\x5d\xde\xf7\x4a\x73\x68\xfc\x42\xee\x91\x94\xfd\x4c\x54\x56\x5b\xef\x2c\x2c\x95\xb4\x75\xde\xe9\x09\x79\x94\x56\xfe\x46\xc2\x0f\x07\xde\x85\xf7\xe5\xdd\xf9\xef\x87\x3a\xd0\x7d\x6d\x59\xe7\x43\x53\xfd\xe7\xbf\xb0\xd1\x23\x5e\xbc\x71\x8a\xfe\xc8\xd2\xe3\x2e\x8f\xd3\xd1\xcf\xba\x99\xf5\x4a\xd6\x44\x9d\x8f\xc0\x4a\xb2\x67\xfd\x7f\x41\xdd\xd2\xcc\x5c\x5f\xc0\xc5\xfc\x09\x00\x00\xff\xff\xd4\xae\x19\xdd\x93\x03\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0xf9, 0x81, 0xba, 0xaa, 0x37, 0x3b, 0x98, 0x24, 0x3b, 0xc2, 0x48, 0x60, 0xce, 0x81, 0xf7, 0x1e, 0xbe, 0x3d, 0x46, 0x93, 0xdc, 0xc5, 0x85, 0x3, 0xd6, 0xdb, 0x8b, 0x34, 0x43, 0xbd, 0xeb}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\xbc\xf8\x50\x24\x70\xe4\x4b\xe9\xc1\x38\x09\xc1\x8d\xa1\x87\x9a\x50\xdc\xde\xc7\xd2\xd8\x5a\xa2\xec\x8a\xdd\x91\xd5\x10\xf2\xdf\xcb\x6a\xf5\x61\x39\x85\x94\xea\xb4\xec\xbe\x99\x79\x6f\xe6\x8d\xd4\x73\x65\xac\x60\xb6\x35\x7a\x53\xeb\xa3\xda\x97\xbc\x33\x4f\xac\x67\x51\xff\xf2\x9d\x85\x72\x12\xfa\xa5\xb8\x71\xe3\xf5\xc3\x6f\x7a\xae\x4a\xde\x6e\x76\xb3\x28\x5a\x2c\x16\xd8\x15\xca\x41\x2c\x69\x47\x99\x28\xa3\xa1\x1c\x9a\x82\x04\xa4\x41\x59\x66\x6a\x2d\x68\x4c\x5d\xe6\xb0\xb5\x6e\x23\xc4\xc0\xb1\x40\x89\xe3\xf2\x80\xba\xf2\x17\x96\x33\x56\x27\xc6\x76\xb3\x73\x69\xc8\x79\xa8\x75\x9b\xb0\x8d\xa9\x1d\x3b\x9c\x3c\x15\x8f\x7e\xd2\xa6\x41\x53\xb0\xe5\x3e\x99\xcf\x52\x30\x32\x53\x96\x3c\x46\x29\x0d\x27\xc6\xd2\x91\x41\x3a\xf7\xd8\xcc\x32\x09\xb7\x58\x7e\xae\xe4\xe5\x2c\x22\x8d\xa2\x33\x19\x31\xe5\xb9\x65\xe7\x96\xb8\x0f\x87\x39\xaa\x7a\x5f\xaa\xec\x91\xa4\x58\xe2\x71\x38\xcf\xa1\xf2\x25\x7e\x7e\xd3\xf2\xe5\x73\x82\xd7\x28\x02\x80\xca\x72\x45\x96\x63\xa7\x8e\x9a\xed\x12\xf7\xb5\x14\xf7\xa1\x19\x1e\x83\xee\x2b\x59\xce\x08\xe0\x06\x47\x96\x0e\xd6\xd7\x4f\x06\xb0\xff\xd2\x23\xcb\x9a\x2a\xda\xab\x52\xc9\x4b\x3c\x32\xba\x80\xed\x8d\xb5\xa6\x59\x7d\x7a\xbd\x9c\x6f\xba\x1e\xca\x05\x09\x73\x4c\x06\x9d\xfe\x60\x67\xca\x13\xdb\x11\xf7\x76\x1b\x4f\xb3\xdf\xdd\xa1\x22\xad\xb2\x78\xb6\x6e\xe7\xaa\x8d\x20\x14\x04\xc1\xf2\x81\x2d\xeb\xac\x9d\xcc\x74\x24\xb3\x24\x9a\x28\xb7\x5d\x29\xdc\x9c\x4f\x21\x64\xf2\x64\x7a\x2a\xb1\x6f\xb0\xca\x93\xab\x49\xb4\x3e\xc8\xc8\xd1\xc3\x71\x33\x64\x4c\xbb\x83\xbf\x8e\x77\x2f\x15\xaf\xa6\x22\xb7\x9b\xdd\x18\xfb\x95\x84\x6e\xe3\x24\xb9\x02\xb9\x2b\x7c\x00\x1c\x15\x2c\x16\x58\x07\x33\x11\x34\x37\xef\xec\xe4\x26\x6c\xdb\xd7\x31\x15\x56\xd7\xef\x05\xa4\xc1\x9c\x0f\x53\x68\x9c\x4c\x6a\x3a\x3a\x31\x94\xf4\xdd\xed\x36\x6c\x40\x04\xc3\xa5\x1e\x15\xaf\xae\x2f\xaa\xce\x21\x66\xf9\x97\xba\xdd\x8e\x04\x1f\x9d\x17\xcb\x7a\x81\xc1\x68\xc8\x06\xeb\xe1\x60\xec\xe5\xc6\x5d\x70\x28\x95\x7e\xfa\x37\x07\x8e\xff\x94\x74\x3c\xfe\x97\x51\x27\x3e\x7d\x2f\x74\xdc\x97\xf9\x04\x29\x64\x8f\x2c\x1f\xb4\x66\x88\x08\xdb\xf0\x16\xbd\x45\x7f\x02\x00\x00\xff\xff\xee\xca\x8b\xe3\x46\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0xf6, 0x64, 0x3b, 0xcd, 0xe2, 0x8e, 0xf3, 0x1, 0x36, 0x6b, 0x50, 0x4c, 0xec, 0x94, 0xc4, 0x48, 0x28, 0xec, 0xc1, 0x2b, 0xc1, 0xd3, 0xb7, 0xa5, 0x36, 0x64, 0x48, 0xeb, 0x55, 0x20, 0xe6}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x51\x6f\xe2\x3c\x10\x7c\xcf\xaf\xd8\xf2\xd0\x82\x84\xe0\xbd\x6a\x2b\xb5\xfd\x54\xe9\x93\xae\xba\xaa\xed\xf5\x5e\x59\x9c\x4d\xb2\xc2\xd8\xd1\x7a\x03\x8d\x10\xff\xfd\x64\x07\x42\x72\x3a\x1e\x90\xc0\xe3\xd9\xd9\x99\x71\xb6\x5c\x2e\xe1\xb3\xe2\x00\x2a\xe8\x02\x1a\x65\xef\x80\x03\x20\x28\x6d\x6b\x8b\x4a\x50\x78\x89\x3f\x2f\xe7\xe9\x92\x7a\x30\x42\xf1\x1c\xc1\xd1\x1e\x2c\xbb\x0d\xb0\x03\xad\x88\x05\xd0\x18\xdf\x38\x8d\xa8\x35\x41\x13\x28\x4f\x34\x42\x86\x78\xc7\xae\x04\xf1\x2d\x5a\x65\x0a\xff\x56\x60\xd0\x8d\x2e\xa2\x6b\xa1\x68\x5c\xc9\x6b\x4b\xa0\x7e\x43\x6e\x0e\xfb\x8a\x4d\x15\xb5\x86\x9a\x0c\x17\x4c\x39\xac\xdb\x38\x1f\x56\x3b\x6c\xac\xbe\xa1\x56\x2b\x40\x29\x9b\x2d\x39\x4d\x73\xd2\xd7\xff\x45\x02\x9d\x25\xee\xd1\x69\x88\x42\x3b\x71\x74\x91\x16\xd7\x79\xf9\xf1\xf3\xf7\x3c\xe2\xdb\x1b\x6b\xa3\x1e\x58\x2d\x83\x7a\xc1\x92\x96\x85\xf5\xfb\xcf\xa8\xe5\x2b\x8e\x5b\x0d\xc8\xdb\xc4\x3a\x24\x65\x8d\x6c\xbf\x3e\xfe\x7b\x9e\x9f\x00\xbe\xb1\x79\x22\x7c\x61\xd4\x44\xb3\x48\x3c\x1f\x1d\x7b\x54\x9f\x18\xd1\xe5\x10\x3c\x78\xb7\x80\x93\x57\x04\x35\x6a\x75\x31\x27\x6e\x53\x37\x6b\xcb\xe6\x94\x42\x38\x65\x92\x60\x5a\xa1\x9e\x82\x81\xa2\xd1\x46\x68\x1e\x11\xf4\x5d\x93\x51\xca\x07\x22\xfb\x71\x25\x39\x12\x36\x63\xa3\x4d\x12\xbc\x4e\x7d\xd8\xa3\xe4\xdd\xd5\xe4\x64\x5d\x8b\xaf\x85\x63\x19\x92\xf3\x59\xc6\xdb\xda\x8b\xc2\xe4\xe5\x94\x59\xda\x6f\xd2\xff\xfd\x4a\x8a\x39\x2a\x7e\x31\xed\xc3\x24\xcb\x06\xd1\x4f\xfb\xec\x6e\x61\x60\xc5\x0c\x0e\x59\x06\x00\x50\x0b\xd5\x28\x34\x0d\x5c\x3a\x92\x5b\x78\x6c\xb4\x7a\xec\xa2\xec\x31\xf1\xb3\x5c\xc2\x3b\x69\x23\x0e\x08\xc5\xb6\xc0\xe3\xd4\x73\x4f\xc1\xdd\x28\x54\xb8\x8b\x0d\x1e\xe9\x84\x94\x43\xcf\xc4\x05\x74\xc3\x16\x6b\x2f\xe2\xf7\x77\xd7\x23\x74\x97\xda\xc3\xb4\x10\xbf\xbd\x85\x5e\xfd\x0c\xee\xef\xc1\xb1\x85\x43\x4f\x94\xe4\xa3\x63\x33\x9d\x3c\x76\xc0\x3e\xbe\x4b\x85\xc7\x2d\xef\x22\x8c\x62\xc1\x79\x05\xfa\xe6\xa0\x93\x59\xcf\x78\x1c\xed\xfb\x7c\x7e\x8f\xa7\x32\x18\xac\x71\xcd\x96\xb5\x3d\x27\x95\xa4\x76\x8d\xf0\xce\xb6\xb1\x04\x3e\x50\x18\x92\x44\x58\x4e\xb5\x0f\xac\x51\x4b\xf7\x1c\xb5\x12\xdf\x94\x55\x3a\x7c\xef\xca\x22\xc0\x4e\x49\x0a\x34\xd4\x5f\xb7\xa4\xc3\xa1\xf7\x67\xdf\x62\x2b\xef\xae\x0f\x63\xdb\xce\x3c\xf3\xb1\xf9\x8b\x27\xb4\xe8\x0c\x1d\x1f\xa6\x23\xe3\x46\x95\x59\x94\xa4\xef\xe9\x99\xb6\x67\x9a\xb7\xb4\x73\x74\x7e\x3a\x9b\x8f\x6e\x2a\x4a\x49\x3a\x88\xa6\x3f\x9d\x5d\x8d\xfc\x7b\xc5\x0d\x41\x68\x84\xd2\x9e\x83\x45\x38\xc0\x0e\x2d\xe7\xc3\x4a\x5c\x5d\xce\x17\xa6\x22\xb3\x99\xce\xe0\x70\x8e\xf7\x89\x1c\x15\x6c\x18\xa5\xfd\x8b\x27\xa6\x98\xb8\xae\x26\x33\x38\x66\x5d\x88\xc7\x3f\x01\x00\x00\xff\xff\x95\xc6\xed\x5a\x87\x05\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0xb1, 0x9b, 0xeb, 0x44, 0x1d, 0x9d, 0x59, 0x84, 0x3f, 0xe1, 0x9b, 0xc9, 0x6e, 0x6a, 0xc3, 0xc, 0x3a, 0x4c, 0x78, 0x17, 0x1c, 0x8d, 0x1b, 0x46, 0x1f, 0x3f, 0x39, 0x2c, 0x4e, 0xf6, 0xa}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcb\x6e\xdb\x30\x10\xbc\xeb\x2b\xb6\x3a\x34\x32\xd0\xd8\x97\xa2\x07\x21\x0f\x04\x49\x03\xe4\x92\x06\xa9\xfb\x01\x34\xb5\x92\xd8\xca\xbb\x04\xb9\x8e\x13\x04\xf9\xf7\x82\x7a\x50\xf2\x0b\x2d\x4f\xb4\x49\xce\xec\xce\xcc\xca\xac\x2d\x3b\x81\xf4\x91\xe9\x7e\x43\x95\x59\x35\xb8\xe4\x3f\x48\x69\x32\x9c\x7c\x7f\x55\x6b\xdb\xe0\xe3\xfd\x32\x4d\x92\xc5\x62\x01\xcb\xda\x78\x10\xa7\xc8\x2b\x2d\x86\x09\x8c\x87\x92\x5d\xf7\x57\x89\xce\x19\xaa\x40\x51\x01\x8f\xf7\x4b\x28\x1d\xaf\xdb\x57\x4c\x08\x4a\x6b\xde\x90\x80\x30\x28\x62\xa9\xd1\x25\xc9\x04\x28\x73\xa8\x8d\x35\x48\x92\xc3\x4d\x51\x38\xf4\xfe\x0b\x6c\x8d\xd4\x85\x53\xdb\x87\xbb\x1c\x7e\x3d\x90\x7c\xfb\x3a\x83\xf7\x24\x01\x00\x08\xb0\xcf\x58\xa2\x43\xd2\x18\x40\xa5\xc6\x78\x1f\xdd\x99\x07\xcd\x4d\x83\x2d\x76\xfb\xa0\x41\x89\xe7\xcf\x58\xe6\xf0\x79\x6c\x6e\x7e\x3b\xde\x3d\x82\xce\x65\x8b\x3e\x02\x06\xbe\x02\x2d\x7b\x23\xed\x49\x68\x56\x38\xd2\xf4\x47\x1d\xcb\xfb\xbe\xba\x13\xb2\xa7\xcd\xaa\x31\xfa\xa3\xe3\xb4\x0e\xad\x72\x98\x79\x53\x11\xba\x1c\x6e\x36\x52\xdf\x74\xa2\x85\xae\xa1\x5f\x8b\x05\xac\xd8\x39\xde\x82\x02\xb7\x2f\x40\xf7\xf6\xcc\xb7\x15\xed\x09\x10\x96\xc7\xa6\x9c\x4f\x54\x80\xcb\xfe\x49\xbc\x11\xd6\xbc\x23\xb8\x38\xae\xd0\x55\x16\x7c\xcd\xe1\xe8\xe1\x4f\x61\xa7\x2a\x7c\x52\x52\xcf\x76\x30\xaf\xaf\xc1\x2a\x32\x3a\x4b\xfb\x9e\xa0\x60\xf4\x40\x2c\xe0\x85\x1d\x82\x22\xe0\xd5\x6f\xd4\x02\xaa\x13\xd5\x5b\xd4\xa6\x34\x58\x80\x55\x52\xa7\xb3\x64\x2a\x41\x85\xdd\xa5\x98\x1a\x0f\xb6\x15\x33\xe6\xac\x03\x8b\x6f\x82\x2f\xf1\x32\x5c\x06\x80\xbe\x90\x31\x79\xbb\x14\x51\xe5\x1e\xf8\x40\x6c\x87\x1a\xcd\x0b\xba\x83\xa8\x45\xa5\xc7\x20\xc0\xe5\xc8\xbe\xab\x75\x85\x72\xab\xac\x5a\x99\xc6\xc8\x5b\x76\x54\xd4\x2e\x26\x87\x9a\x46\x9f\xfe\x23\x63\x57\xd9\x29\x3f\x6e\x79\xd3\x14\xad\x11\xa7\x73\x35\xb4\xba\x33\x56\x83\x25\x7d\x7e\xf1\x15\xf5\x46\x70\x18\xd0\x5e\xc5\x21\x6c\x71\x4e\x42\x78\xda\x1f\xbc\xa5\x63\x73\x3a\x98\x45\xa5\xc0\xc5\xf9\x41\x62\xe3\x3e\x9b\x7e\x1c\xc6\xfd\xae\x87\x77\x7b\x43\x6a\x68\x37\x35\xc7\xe9\xf7\xbc\x1b\xb6\x99\x04\x69\x73\xb8\x38\xa7\x52\x66\xd3\xd6\x2d\x7b\x99\x8c\xe8\xa7\x83\xa2\x2b\x94\x87\x3b\x9f\xcd\xe6\x9a\x49\x94\x21\x3f\xa9\x7e\x96\x43\xfa\xc3\x99\xca\x90\x6a\x3a\x51\xc0\xd7\xd1\x93\x5a\xbd\x60\x2c\x5f\xd1\xdb\x9a\x1d\xa6\x27\x2b\xfd\x17\xcf\xb2\x6f\x1e\x5f\xa6\x2c\xdb\x40\x3b\x90\xa4\x7d\x63\x1f\x7f\x03\x00\x00\xff\xff\x89\x54\x0a\x2f\x1e\x06\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xe3, 0x8c, 0x85, 0xaf, 0xae, 0xa, 0x2a, 0x5d, 0x6b, 0xa8, 0x62, 0x44, 0xd, 0xe8, 0x5b, 0x49, 0x53, 0x24, 0xdb, 0x88, 0x29, 0x12, 0xc6, 0x8b, 0xe4, 0xa2, 0xe2, 0x21, 0xd7, 0x19, 0x3}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x6a\x02\x31\x10\x86\xef\x79\x8a\x61\x0f\x65\xbd\xe8\xbd\x94\x82\x48\xf7\x28\x1e\xb6\x0f\x30\xc6\x98\x1d\x8c\x33\x21\x99\x60\x8b\xec\xbb\x17\x4d\x75\x6d\xa1\x74\x4e\x21\xf3\xff\xf3\xcd\x3f\x74\x8c\x92\x14\x9a\xb5\x70\x57\xd8\xd3\x36\xb8\x5e\x0e\x8e\x1b\x73\xeb\xbc\x7d\xe0\x31\x06\xb7\xee\xfa\xe9\x6f\xdd\xf5\x9d\xa4\x13\xa6\x1d\xb1\x6f\x8c\x59\x2c\x16\xd0\x0f\x94\x41\x13\x72\x46\xab\x24\x0c\x94\xe1\x34\xa0\x02\x32\xa0\xb5\x52\x58\xe1\x24\x25\xec\x20\x15\xbe\x3a\x54\xa0\x70\x20\x3e\x00\x69\x06\x2b\x21\xb8\xea\xdc\x27\x39\x42\x2c\xdb\x40\x16\xb2\x4a\x42\xef\x8c\x79\x1c\x7d\x36\x06\x00\x20\x26\x17\x31\xb9\x36\x93\x67\x97\x9e\x61\x59\x74\x58\x56\xd4\xec\xa6\xb9\x14\xed\xa1\x4a\xe6\xde\xe9\x0a\x23\x6e\x29\x90\x7e\xb6\x53\xb4\xf9\xea\x4e\xdf\x5c\xb9\x1b\xd4\x61\x36\xb7\x83\xb3\x87\x97\xa7\xf3\x83\x70\x7a\xfe\xb6\x8c\xaf\xed\x85\x0a\x0f\x15\xc4\xb7\xcd\xfb\x35\x23\xb1\x87\xbf\xbd\x35\xf2\x84\x6e\x66\x3f\xe6\x7c\x6f\x5f\xaf\xf5\xef\xda\x77\xeb\x58\x4f\x30\x9a\xd1\x7c\x05\x00\x00\xff\xff\x83\x4e\xa7\x05\xe8\x01\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0x99, 0xda, 0x89, 0x87, 0x28, 0x86, 0x8b, 0xc7, 0x4f, 0x6e, 0x5a, 0xa8, 0x65, 0x5, 0xf, 0xef, 0xc5, 0xfd, 0x85, 0x6a, 0xff, 0x10, 0xa8, 0xe8, 0x64, 0x43, 0xe7, 0xaf, 0x69, 0xdc, 0x9f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                          scriptsBorrow_nftCdc,
	"scripts/get_collection_ids.cdc":                                  scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                               scriptsGet_collection_lengthCdc,
	"scripts/get_contract_storage_path.cdc":                           scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                    scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                        scriptsGet_nft_viewCdc,
	"scripts/get_total_supply.cdc":                                    scriptsGet_total_supplyCdc,
	"transactions/NFTForwarding/change_forwarder_recipient.cdc":       transactionsNftforwardingChange_forwarder_recipientCdc,
	"transactions/NFTForwarding/create_forwarder.cdc":                 transactionsNftforwardingCreate_forwarderCdc,
	"transactions/NFTForwarding/transfer_nft_to_receiver.cdc":         transactionsNftforwardingTransfer_nft_to_receiverCdc,
	"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc": transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
	"transactions/destroy_nft.cdc":                                    transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                       transactionsMint_nftCdc,
	"transactions/setup_account.cdc":                                  transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":               transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":               transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/transfer_nft.cdc":                                   transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                              transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
		"get_total_supply.cdc": {scriptsGet_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"NFTForwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftforwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftforwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftforwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftforwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
