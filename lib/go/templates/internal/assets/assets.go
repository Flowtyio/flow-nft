// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../scripts/borrow_nft.cdc (541B)
// ../../../scripts/get_collection_ids.cdc (517B)
// ../../../scripts/get_collection_length.cdc (425B)
// ../../../scripts/get_contract_storage_path.cdc (501B)
// ../../../scripts/get_nft_metadata.cdc (5.633kB)
// ../../../scripts/get_nft_view.cdc (4.442kB)
// ../../../scripts/get_total_supply.cdc (98B)
// ../../../transactions/NFTForwarding/change_forwarder_recipient.cdc (1.365kB)
// ../../../transactions/NFTForwarding/create_forwarder.cdc (2.575kB)
// ../../../transactions/NFTForwarding/transfer_nft_to_receiver.cdc (1.577kB)
// ../../../transactions/NFTForwarding/unlink_forwarder_link_collection.cdc (1.111kB)
// ../../../transactions/destroy_nft.cdc (880B)
// ../../../transactions/mint_nft.cdc (3.102kB)
// ../../../transactions/setup_account.cdc (972B)
// ../../../transactions/setup_account_from_nft_reference.cdc (1.407kB)
// ../../../transactions/setup_account_to_receive_royalty.cdc (1.453kB)
// ../../../transactions/transfer_nft.cdc (1.604kB)
// ../../../transactions/unlink_collection.cdc (545B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x3d\x6b\xf3\x30\x14\x85\x77\xfd\x8a\x83\x87\x17\x1b\x5e\xe2\xa5\x74\x08\x4d\x43\x1a\x1a\xe8\x12\x42\x71\xe7\x22\xcb\xd7\xc9\xa5\xb2\x24\x64\x89\xb6\x84\xfc\xf7\x92\xf8\x2b\x4d\x35\x49\x57\xe7\x41\x3a\x0f\x37\xce\xfa\x80\xad\x35\x9b\x68\xf6\x5c\x6a\x2a\xec\x07\x19\xd4\xde\x36\x48\x6e\xc7\x89\xe8\xf3\xcf\x5f\xb2\x71\x9a\xb6\x9b\xa2\x4f\x4e\x83\x44\x88\x3c\x47\x71\xe0\x16\xad\xf2\xec\x02\x4a\xeb\xbd\xfd\x6c\x21\x0d\x46\x40\x42\x59\xad\x49\x05\xb6\x46\xb8\x58\xa2\x8e\x06\x8d\x64\x93\xca\xaa\xf2\xd4\xb6\x73\xac\xba\xcd\x7f\x70\x35\xc7\xdb\x8b\x09\xf7\x77\x19\x8e\x02\x00\x34\x05\x48\xa5\x6c\x34\x01\x0b\xec\x29\xac\xba\xc3\x00\x67\x62\x8c\x4d\xcf\xbc\x52\x8d\xc5\x80\x5d\xee\xcf\x6b\xb6\xa7\xb0\x96\x4e\x96\xac\x39\x7c\xa7\x53\x8f\xd9\x7a\x24\x77\xb1\xd4\xac\x76\x32\x1c\xb2\x89\xeb\x5a\x3d\xfc\x3b\xde\x4a\xfa\x03\x9e\x1e\xd3\x89\x5b\x2e\xe1\xa4\x61\x95\x26\x6b\x1b\x75\x05\x63\x07\x41\x50\xe3\x37\x3a\x47\xee\x42\x5f\x35\x48\xfa\x5e\x79\x8e\xa7\x0e\x91\xf0\x54\x93\x27\xa3\x08\xc1\x42\xa2\x75\xa4\xb8\x66\x75\x31\xcd\x06\xe1\x40\xd7\xa6\x07\x2b\xef\x58\xfc\x36\xd3\xd7\xd9\x6e\x8a\xf4\xac\x9b\xab\x4c\x9c\xc4\x4f\x00\x00\x00\xff\xff\x4a\x89\xeb\xad\x1d\x02\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x40, 0x66, 0x22, 0xa6, 0x59, 0x3a, 0x47, 0xc6, 0xbf, 0x61, 0x20, 0xdd, 0xff, 0x88, 0xfe, 0xf8, 0x8, 0x6d, 0x67, 0x2b, 0xf3, 0x85, 0x4b, 0xfb, 0xbd, 0xc1, 0xa4, 0x70, 0x0, 0xac, 0xad}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x4f\xc2\x40\x10\x85\xef\xfb\x2b\x5e\x7a\xd0\x36\x31\x70\x31\x1e\x88\x48\x08\x48\xc2\x85\x10\xc5\x93\xf1\xb0\xdd\x6e\x61\xe3\x76\x76\xb3\x9d\x8d\x1a\xc2\x7f\x37\xa5\x40\xb1\xb1\xa7\xe9\xec\xf7\x66\xde\x1b\x53\x79\x17\x18\x2b\x47\x8b\x48\x5b\x93\x5b\xbd\x71\x9f\x9a\x50\x06\x57\x21\xe9\xb7\x13\x71\xe2\x9f\xbf\x65\xe5\xad\x5e\x2d\x36\x27\xb2\x6b\x24\x42\x0c\x87\x43\xbc\xaa\x60\x3c\x83\x1d\xb6\x9a\xd1\x80\xcb\x79\x0d\x43\x90\x04\xa9\x94\x8b\xc4\xb7\x35\x94\xb3\x56\x2b\x36\x8e\x1a\x91\xf0\x31\x47\x19\x09\x95\x34\x94\xca\xa2\x08\xba\xae\x47\x98\xb6\xc5\xdd\x15\xbd\x8e\xb9\x35\x6a\x2d\x79\x37\x42\x57\x67\x23\xbc\xbf\x2d\x89\x1f\xee\x3f\xb0\x17\x00\x60\x35\x9f\xb7\x61\xdc\x38\x99\xb6\x3f\xe7\xe1\x99\xb8\x60\xdd\xf0\x17\x5d\x62\x7c\x96\x1d\xdf\x9b\x6f\xb0\xd5\x3c\x93\x5e\xe6\xc6\x1a\xfe\x49\xff\xf3\x92\x75\x70\xee\x42\x70\x5f\x8f\x37\xfb\xfe\x09\x07\xb3\x9e\xf0\xf0\x94\x76\xba\xc9\x04\x5e\x92\x51\x69\x32\x73\xd1\x16\x20\xc7\x68\x47\x41\x5d\x76\xb7\x27\xf7\x47\xf5\x95\x6d\x48\x46\xed\xb5\x32\xa5\xd1\x05\xbc\xe4\x5d\x72\x8a\x17\x34\xc7\x40\x7f\x13\x36\x71\x96\xf3\x3a\xcd\xc4\x41\xfc\x06\x00\x00\xff\xff\xd5\x62\xe6\x83\x05\x02\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0x14, 0x6c, 0x93, 0x1f, 0x24, 0xb4, 0x31, 0x68, 0xf1, 0x96, 0x94, 0xa2, 0xd9, 0xab, 0x75, 0x7a, 0x31, 0x4e, 0xbe, 0x37, 0x79, 0x7d, 0x14, 0xfc, 0x99, 0xb3, 0x60, 0xb, 0x4c, 0x3, 0x4c}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x91\xc3\x48\x2e\x7d\x80\xb2\xae\x94\x6c\x85\x5e\x4a\x19\x7d\x01\xdb\x51\x52\x33\x47\x32\x8e\xcc\x36\x4a\xdf\x7d\x34\x6e\x93\xad\xf3\xc1\xd8\xf2\xff\x09\x7d\x76\x7d\xe0\x28\xb0\x67\xda\x26\xea\x9c\xf1\x78\xe4\x0f\x24\x68\x23\xf7\x50\x3c\x96\x0b\x75\xcb\xbf\x7d\xe9\x3e\x78\xdc\x6f\x8f\xb7\xe4\x5c\x28\x94\x0a\xc9\x40\x9b\x08\x7a\xed\xa8\xd4\x4d\x13\x71\x18\x96\xb0\xc9\x87\x6a\x09\x3b\x12\x38\x2b\x00\x00\x8f\x02\xda\x5a\x4e\x24\xb0\x82\x0e\x65\x93\x2f\x77\xaa\x52\x53\xcc\xb2\xf7\x68\xc5\x31\xbd\x63\x0b\xab\x3b\x36\xbe\x5f\xd7\xa2\x43\xa9\x75\xd0\xc6\x79\x27\xdf\xe5\x3c\xd0\xa2\x9e\xc8\x43\x32\xde\xd9\x83\x96\x53\x35\x73\x86\x63\xe4\xcf\xe7\xa7\xf3\xa3\xed\x3f\xf0\xf2\x52\xce\xdc\x7a\x0d\x41\x93\xb3\x65\x51\x73\xf2\x0d\x10\x0b\xe4\x56\x60\xa7\x31\xf2\xef\x84\x91\xfe\x65\x50\xe4\x36\xe3\x16\x51\x52\xa4\xbf\x7a\x57\x97\xdd\xeb\x50\x56\x0b\x8f\xd4\xc9\x49\x5d\xd4\x4f\x00\x00\x00\xff\xff\x8b\x5b\x04\xf6\xa9\x01\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe9, 0xf, 0xb2, 0x84, 0xd9, 0x11, 0xe, 0x7b, 0x6e, 0xed, 0x83, 0x93, 0x86, 0xd6, 0xea, 0x23, 0xd5, 0xc6, 0x60, 0xaa, 0x94, 0xa7, 0x61, 0x81, 0xa9, 0x5d, 0x36, 0x7d, 0x81, 0x6d, 0x46, 0x9}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x6a\xf3\x30\x10\x84\xef\x7a\x8a\x89\x0f\x3f\x36\xfc\xf8\x01\x42\x9c\x10\x52\x7a\x6b\x29\x6d\xe8\x7d\x23\x6d\x52\x81\x2d\x99\xd5\x3a\xa1\x94\xbc\x7b\x71\xec\x26\x0e\x3d\xf4\x62\xac\xd1\xec\xcc\xa7\xf5\x4d\x1b\x45\xf1\xc4\x4a\x8e\x94\xde\x3d\x9f\x12\xf6\x12\x1b\x64\x77\x5a\x66\x46\x67\x7f\x7a\xe5\x14\xeb\x23\xcb\x68\x9c\x4a\x99\x31\x6d\xb7\xc3\xbe\x0b\x68\xc8\x87\x9c\x9c\x93\x39\xd6\xce\x09\xa7\xf4\x1f\x81\x1a\x9e\xe3\x4d\xc5\x87\x43\xd1\xff\x44\xa1\x03\xbf\x90\x7e\xac\xf0\x65\x00\xa0\x66\x85\xa2\xc2\xf6\xb3\xe5\xc5\x1d\x42\xf9\xfc\xb8\xdd\xc4\xba\x66\xab\x3e\x86\x07\x52\x5a\xe6\xc5\x75\x66\x17\x45\xe2\x89\xdd\x26\x06\x15\xb2\x7d\xc4\x81\x75\x6d\x6d\xec\x82\x5e\x30\x8a\xd2\x8e\x77\xa9\x1c\xdc\x8b\x7f\x53\xf4\x65\x3e\xd0\xf5\xdf\x02\xab\x15\x5a\x0a\xde\xe6\xd9\xcf\x14\x6c\xec\x6a\x87\x10\x15\x3b\xbe\xf6\x65\x85\xb9\x32\x1c\x3d\x9f\x50\xfd\x42\x29\x65\x68\xe8\xcb\x72\x1d\x90\xfd\x7e\x74\x57\x08\xbe\x1e\xdf\x0e\x08\x6b\x27\xa1\x97\x2e\xc2\xf9\x96\x6d\x1d\xaa\xcb\xc8\x0c\x94\x66\xf8\x63\x33\x66\x12\x66\x5d\x99\x6e\x7b\x36\x67\x83\xef\x00\x00\x00\xff\xff\x12\x46\xac\xee\xf5\x01\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0x4d, 0xab, 0x59, 0x61, 0xf8, 0x6, 0xd3, 0xf7, 0x86, 0xea, 0x94, 0x5d, 0xe6, 0xfd, 0x98, 0xd0, 0xce, 0x95, 0x56, 0x15, 0x1, 0xd9, 0x15, 0xb0, 0x8a, 0xa4, 0xd8, 0x5, 0xf, 0x15, 0x51}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x41\x6f\xe3\x36\x13\x3d\x5b\xbf\x62\x92\xc3\x07\x1b\xd8\x4f\xe9\xa1\xe8\xc1\xa8\x1a\x6c\x93\x6c\xb1\x40\xd6\x58\x24\xde\x5e\x82\x1c\x68\x69\xe4\x10\x91\x28\x95\xa4\x92\x35\x82\xfc\xf7\x82\xa4\x64\x92\x12\x69\xa5\xb9\x58\x9a\x79\x33\x43\x8a\xf3\x48\xbe\xd0\xba\x6d\xb8\x84\x9b\x9f\xa4\x6e\x2b\xdc\x7c\xd9\x42\xc9\x9b\x1a\xce\xad\xe1\x3c\xe9\x31\xdf\x50\x92\x82\x48\xf2\x37\xc5\x57\xd1\xc3\x3c\xdb\x79\x92\x5c\x5c\x5c\xc0\xf6\x89\x0a\x10\x39\xa7\xad\x84\x3d\x4a\x01\xa4\xaa\x40\x3e\x21\xbc\x50\x7c\xfd\xff\x8e\x08\x2c\xa0\xee\xe3\x80\x08\xd1\xe4\x94\x48\x2c\xe0\x95\xca\x27\x8d\x13\x2d\xe6\xb4\xa4\x58\xc0\xe6\xcb\x56\xa7\x24\xac\x00\x8e\xb2\xe3\x4c\x00\x95\x40\x04\x10\x10\x94\xed\x2b\x04\x21\x79\x97\xcb\x24\x69\xbb\x5d\xff\xac\xa2\xe0\x2d\x01\x00\x50\xc6\x0a\x25\x30\x52\xe3\x1a\xee\x25\xa7\x6c\xef\x39\x0a\x34\x03\xa5\x0d\x0b\xfa\xe5\x53\x57\xef\x18\xa1\x55\xd0\xdb\xbc\x32\xe4\x6b\xf8\x5c\x14\x1c\x85\xf0\x03\x0f\x6d\xb8\x22\x6f\x0e\xa4\x92\x14\xc5\x1a\x1e\xbc\xaf\x97\xde\x69\xcf\xe1\xd1\x83\xe3\x4f\x89\x9c\x91\xea\xc7\xdd\x6d\x30\x9d\x40\x4e\x49\xb5\xe9\xea\x9d\x1a\xc9\x8f\xaf\x4c\xfe\xf6\xab\x07\xc8\x9b\xaa\xc2\x5c\x4d\xf0\x7b\xb7\xab\x68\xfe\x9d\xc8\xa7\x35\xd8\xe7\x08\xf8\x5e\x36\x9c\xec\xd1\xa0\x9d\x97\x58\x6e\xde\xbc\xd0\x02\x79\x9f\x9d\xd3\x17\x22\x4f\xe2\x75\xfd\xe0\x8c\xc6\xa0\x5b\xca\x9e\xb1\xd8\xc6\xbe\xe7\x74\x0c\x1f\x0e\xd8\xc4\xba\xc2\x42\xae\x67\xfa\xc3\x22\x6f\x66\x16\xca\xf9\xb4\xff\x74\x84\xe3\xd7\x9a\xec\xe7\xaa\xff\x49\x18\x43\xfe\x11\xe4\xbd\x22\x51\x25\xd6\xf0\x66\x60\x03\xfc\xdd\x6f\xa6\x82\x9a\x99\xf8\x8d\x77\x63\xcc\x7e\xff\x72\x42\xa5\x18\x23\xb7\xda\x9a\x2c\x16\x03\xac\xc6\x82\x92\x09\xec\x9b\xb6\x5e\x3a\xb8\x8a\xe6\xc8\x04\x8e\x81\xb7\xc6\x7c\x99\xe8\xda\x94\x51\xb9\xd4\x4f\xea\xcf\xe5\xec\xa7\xa3\x35\x40\x58\xeb\x9c\xb0\xd5\xba\x7c\xaa\x5a\x3b\x2b\xa5\xdb\x29\xd6\x31\xcf\x53\x8b\x0d\x90\xd4\x3a\x43\x0c\xb5\xde\x39\x7a\x86\x90\x31\x6e\x06\xb3\xc6\x88\x19\x1f\xc2\x74\x0a\xf3\x94\x3c\x55\xfa\x63\xe8\x4d\x70\xb9\x4f\x32\x31\x04\x0b\xd0\x30\xf8\x09\xa7\x1c\x0c\xc1\x02\x04\x0c\x66\x8b\xb1\xcf\x69\x91\x93\xd4\x73\x5a\xf8\x04\xef\x3e\x25\x8b\xc5\x62\xd1\x53\x2e\xc8\x38\x83\x18\xc8\x16\xe1\x9a\x2a\xb3\xea\x0f\x48\xd3\xa0\x55\x99\x2a\xb6\x41\xa6\x49\xe7\x3b\x1c\xc2\x41\xe6\xd2\xcf\x87\x1d\xa9\x07\x99\xa5\xa1\x0f\xd1\x14\x84\xcc\x50\x71\x14\x7d\x68\x75\x75\x43\x46\xdf\x77\x24\x22\x64\x96\x94\x3e\xc4\xe1\x1f\x64\x2e\x1b\x7d\x98\xcb\x44\xc8\x3c\x62\xfa\xc0\x10\x29\x21\x0b\x72\x35\x16\xe8\xd0\xd2\x8b\x1c\x1f\xa5\xa1\x9a\x0e\x65\xfd\xaa\x8e\xe3\xf4\x80\x03\x83\x3d\x1d\x60\x39\x1a\x08\xb5\xce\xb9\x21\xc7\xd2\x4c\xdc\xb1\x44\x1b\xd3\x86\xbe\x21\x06\xbe\xf6\x5a\x33\x68\x8f\x85\xde\x78\x1d\x13\xb4\x47\x57\xd6\x6e\x1d\xfe\xca\x5a\x7b\x2c\xd4\xd9\x4e\xbc\x50\xc7\x1e\xad\x6a\xb6\x18\xbf\xa2\xb1\x8d\xb8\x60\x76\x14\xc5\x03\xe7\x58\xb7\x4c\xd3\x3b\x89\x22\xe9\x70\x94\x2f\x16\xda\x61\xb6\x95\xcc\xfc\x58\x73\xbf\x97\x64\xfd\xaf\x4e\xf6\x9e\xbc\x9b\xfb\x76\xd9\x31\xa8\x09\x65\x4b\x62\x8e\x55\x7b\xbe\x02\x2d\x86\xb3\x6e\xb5\x76\x2e\xe4\xea\x2e\x40\xf2\xbc\xe9\x98\x84\x4c\xa9\x83\xcf\xe6\x65\xc8\xb0\x4a\x8e\x30\x3b\x4f\xc8\x86\x98\xe3\x5c\xd2\x3d\xca\x2b\xd2\x92\x1d\xad\xa8\x3c\x2c\xad\x5a\x49\xaf\x02\x24\x5d\xd9\xb8\x5d\xc3\x79\xf3\xfa\xfb\xff\xde\x9c\x10\xfb\x38\x0e\x7e\xff\x63\x69\x63\x2f\x2f\xa1\x25\x8c\xe6\xcb\xf3\xab\xa6\xab\x0a\x60\x8d\x04\x93\x0e\x08\x70\x2c\x91\x23\xcb\x11\x64\xa3\x45\x8c\x1d\xfe\xb9\x33\x29\x56\x4a\x6f\x09\xfb\xf1\xd8\x11\x2c\xd5\x87\xa3\xc5\xea\xcc\xc4\x5c\x5c\xc0\x5f\x5a\x86\x20\xec\x88\xa0\x39\x14\x54\xb4\x15\x39\x00\x65\x65\xc3\x6b\xa2\x3f\x4f\xd9\x70\x90\x4a\x74\x29\xb9\x34\x54\x1a\x80\xd9\xe8\x28\xd9\xa3\xbc\x36\xae\x25\x2b\x65\xa0\x8e\xd9\x63\x43\x15\x10\xf6\xf4\x05\x99\x57\xa6\x47\xab\xdc\xa1\x52\x77\xc3\x86\xed\x16\x1b\xe9\x9a\x50\x9c\xc3\xc3\x71\xa4\xc3\xf3\xf8\x14\xbd\xb5\xf4\xe7\xeb\x2c\x85\x85\xc4\xc6\xef\xe7\x21\x92\x8c\x47\xc3\x4a\xd9\x9f\xe1\xb1\x14\xbd\x5b\x8c\xca\xbb\xa7\x4f\x2c\xf4\x5e\x63\x9c\xc0\x63\xb4\x7f\x9d\x35\x47\xa7\x39\x60\xcf\xd2\x9e\x4a\xde\x4c\xb7\xc7\x03\x56\xe5\x55\x6f\xcb\x20\xd5\xa2\x37\x19\xc8\xe0\xcd\x88\x09\xd5\x0b\xcf\xa8\xfa\x63\xba\x14\xa9\x30\xf1\xe9\x33\x1e\x84\x73\xc5\x98\x14\x78\x78\xc6\xc3\xa3\xbf\x69\xfb\x19\x34\xe0\x2c\xed\x78\xd5\x6f\x39\xc9\x62\x61\x75\x49\xe8\x63\x99\x3b\xd2\xb0\x3e\x06\xdd\x6f\x6a\x13\xac\xb9\x2e\x69\x6c\x8f\x1c\xf6\xb9\x09\xb4\xbf\x36\x19\xac\x1e\x8b\xf9\x47\x84\x62\xc1\x58\xac\xf4\x9c\xd3\x97\xa9\x88\x64\x19\x20\x8e\x31\xa8\x5f\x06\xdc\xd1\x94\x76\x9c\x2e\x57\x13\x41\xa3\x7f\x02\x72\xa6\x7f\x48\x69\x81\x4c\xd2\x92\xba\x20\x47\xda\x38\xf4\xf5\xe9\xba\x8a\xa8\x1b\xe7\x45\x2d\x4e\x4c\xe6\x8c\xbb\x3b\x65\xfa\x71\x4e\xf7\x4c\x38\x99\xb6\x1f\x57\x42\xd3\x60\xf1\x5f\xb4\x51\xa0\xb6\xe3\x3f\x25\x97\x62\xa3\xb6\xc6\xe0\x32\x9c\x52\x55\xb1\x94\x16\x33\x97\x32\x20\xbe\xe2\x33\xfc\x70\x5a\xa3\xd2\xa6\xac\xf5\x3b\x3e\xa2\xda\xa6\x61\x41\x16\x44\xc4\xdc\x34\x3a\xda\x8b\x11\x9d\x17\xd8\x6c\xac\x3b\x2d\x69\x85\x63\x92\x45\x94\xe0\x34\xd1\xce\xba\x67\x12\x1d\x77\xd8\x89\x29\x20\x16\xfd\xd3\x25\x55\x47\xf2\x2d\x15\xf2\xe1\x97\xc7\xa9\x62\x94\x53\x8d\x68\x7e\x7c\x51\xe8\x5e\xe4\x56\xc9\x7b\xf2\x6f\x00\x00\x00\xff\xff\x0f\x32\x0c\x4e\x01\x16\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0x83, 0x91, 0x84, 0xef, 0xbe, 0xbd, 0x1f, 0xb, 0xd3, 0x36, 0xdb, 0xff, 0x28, 0xd1, 0xcb, 0x87, 0xee, 0x72, 0x79, 0x40, 0xb5, 0x3b, 0x51, 0xcd, 0x80, 0x74, 0xbf, 0x62, 0x2e, 0x3, 0xe6}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x8c\x7d\x58\xd8\x40\xa0\xd3\x62\x0f\xc2\x6a\x8b\x6e\x9a\x02\x05\xba\x46\x91\xa4\xbd\x14\x3d\xd0\xd2\xd8\x19\x84\x26\xb5\x14\x95\xc4\x08\xfc\xdf\x17\xfa\x24\x29\x91\x92\xd6\x27\x73\xe6\xcd\x87\xc8\x37\xe4\xa3\x73\x2e\x95\x86\xbb\x37\x76\xce\x39\xee\x3f\x3f\xc2\x51\xc9\x33\x6c\x8c\x61\xb3\x6a\x31\xff\xa0\x66\x19\xd3\xec\x07\xe1\x6b\xd1\xc2\x1c\xdb\x66\xb5\xca\xcb\x03\x14\x5a\x95\xa9\x86\xfd\xe7\xc7\xca\x0a\xef\x2b\x00\x80\xca\xc1\x51\x03\x65\x31\x7c\xff\x22\xf4\x1f\xbf\x3b\xe6\xb2\x0c\x38\x04\x3b\x63\x0c\x0f\x5a\x91\x38\x39\x8e\x0c\x8b\x54\x51\xae\x49\x0a\xaf\x5f\x3f\x95\xe7\x83\x60\xc4\xbd\x5e\x25\x2f\x8c\x6b\xc2\x22\x86\x9f\xce\x37\x44\xf7\xb5\xe7\xf2\xcb\x81\xe3\x9b\x46\x25\x18\xff\x7e\xff\xd5\x9b\x2e\x95\x9c\x63\x5a\xf5\xf2\xad\x3c\x70\x4a\xbf\x31\xfd\x14\x83\xf9\x1f\x00\x3f\x68\xa9\xd8\x09\x1b\xb4\xb5\x08\xe5\x56\xf2\x85\x32\x54\x6d\x76\x45\x2f\x4c\x4f\xe2\xeb\xfa\x8b\x1a\xfe\x4a\xe2\x19\xb3\xc7\x4b\xee\xdf\xec\x71\x0f\x8b\x03\xf6\xa1\x03\x34\x90\x4f\x33\x47\x69\x90\x77\x8b\xcf\xe1\xe1\xdf\x92\x29\xfc\x72\x66\xa7\xb9\xea\x7f\x33\x21\x50\x2d\x41\x3e\xc8\x94\x18\x2f\x62\x78\x6f\x60\x1d\xfc\xea\x12\x4f\x31\xd2\x45\xec\x8e\x4b\xf4\x58\x5b\x57\x35\x92\x04\xe9\x6d\xfd\xaf\x5e\xf5\xc4\xbf\xe9\x6d\xf6\x38\x18\xab\x3d\x0b\xc6\xea\x19\x04\xe3\x1c\x4d\x81\x71\xcd\x8f\x80\xc1\x7a\xf8\x6f\x9c\x73\xe4\xf7\x21\x43\xcc\xf7\x66\x0d\xd1\x3e\xdc\xc2\x7c\x93\x63\xfe\x4e\x95\x5e\x86\xde\x7b\xcf\x67\x92\xe7\x3e\x98\x87\xe4\xde\x2d\x1c\x33\xdc\x07\xf3\xd0\xdb\x9b\x2d\xc4\x6d\x8b\x4b\x53\xc4\xae\x00\xbb\xf6\xae\xaf\x7e\x05\xf2\x63\x44\x19\x24\x40\x99\x6b\xac\xb8\x0d\x49\x4d\x71\xd7\x51\xd1\x1b\x92\x9a\xe5\xae\xc3\x62\x38\x24\x36\xdf\x5d\x58\xcf\x75\x48\x0c\xef\x5d\x48\xcf\x79\x48\x0c\xff\x5d\x88\x45\x75\x48\x6c\xe2\xbb\x30\x1f\xe9\x21\xf1\xce\x42\x28\xd0\xa2\xbd\x13\x39\x7c\x08\x7c\x35\xad\x91\x70\xab\x5a\x8e\xe9\x86\x3d\xcd\x4e\x07\x98\x19\xf0\x84\x1a\xe7\x5c\xcb\xa1\x34\x23\x77\x28\xd1\xbe\xa1\x89\x6b\x08\x81\x3f\x39\xd4\xf1\xda\x43\xa1\x77\x0e\x11\xbc\xf6\xe0\xc9\x9a\xd1\x74\x4f\xd6\xd8\x43\xa1\xd6\xb8\x3a\xa1\x96\x3d\x58\xb5\x19\x61\xb7\x62\x63\x1b\x0c\x4a\x3d\xb2\xd5\x94\x98\xd9\xbd\xae\xae\x8d\x7a\x3b\x96\x02\xce\x8c\xc4\x96\x65\x99\xc2\xa2\x88\xe1\x63\xf3\xe7\xc6\x7a\xa9\x76\xf1\x40\xde\x55\x0f\x1f\x4b\x53\x59\x0a\x0d\x09\x9c\x50\x7f\x6c\x16\x5d\x96\xdd\xaa\x87\x99\xe6\x20\xe9\x62\xfa\xfe\xa2\x13\xea\x5b\x96\xb3\x03\x71\xd2\x97\xad\x51\xa1\xd1\xad\x67\xb2\x76\x26\xee\x20\x95\x92\xaf\x7f\xfe\xf6\x3e\x78\xca\xb0\x90\xfc\x05\x95\x89\xbe\xfe\xb5\x35\x61\x1f\x3e\x40\xce\x04\xa5\xdb\xcd\xad\x2c\x79\x06\x42\x6a\x68\x32\x01\x03\x85\x47\x54\x28\x52\x04\x2d\x41\x3f\xa1\xd5\xf9\xc6\xfa\x9e\x17\xc2\xd7\xae\x8c\xb3\xf7\x6d\x4f\x3f\x2c\xff\xb6\xda\x42\xca\x76\x6b\x13\x2e\x8e\xba\xde\xc7\x64\x70\xaf\x9e\x50\xb7\x5b\xdc\x06\xdd\xb8\x95\x62\x67\xe9\xdd\xdf\xe0\x9d\x0e\x09\xbc\x37\xa2\xe5\x28\x15\x3c\xe3\x05\x48\x74\x8d\xd8\xc3\x43\x45\xce\xd9\x65\x1d\x15\x4d\xa2\xe8\x19\x2f\x85\x75\xc7\x8f\x2a\xfd\x7c\xc6\xcb\xaf\xea\x0a\x9f\x4d\x55\x23\xd7\x51\xa9\x78\xcb\xbe\xa6\x7f\x85\xba\x54\xa2\xe3\x96\xab\x91\xba\xa4\x94\x0d\x75\x52\xe7\xa9\x56\x43\xb5\xd4\xf9\xb2\xae\x81\xca\x1c\x10\x4f\x23\xac\xe5\xf5\x4a\xaa\x51\x40\xef\x8b\x4a\x45\xdb\x9d\x57\x6c\x75\x41\xbd\x69\x5d\x9d\xf5\x7d\xb7\xb2\xa3\x1c\xd9\xd5\xc5\x59\xc6\x7a\x03\xe7\x84\x98\xe7\x30\x98\x66\xeb\x28\x5f\x2e\xd0\x42\x29\x8a\xff\x23\xdc\x82\x7d\x58\xa8\x29\x45\x37\xfd\x1d\x66\xc0\x23\xca\x50\x68\x3a\x12\xaa\x65\xf2\x6f\x3a\xb1\x41\xce\x25\xf6\x68\xc5\xb9\x6f\x5e\x9c\x7c\xef\x90\xd9\x33\x57\x2e\xad\x03\x9a\x73\x22\xde\x4b\xf5\x80\x26\x9d\x48\x63\x91\x33\xc4\x4d\x47\xb7\x4e\xdd\x14\x06\x17\x1d\x89\xe3\x70\xa4\x02\x12\x77\x22\xe3\xc1\xe0\x66\x32\xf6\x37\xe7\xc8\x34\x96\xc3\x5d\xc1\x66\xbd\x6e\x00\xbb\xd5\xf5\xbf\x00\x00\x00\xff\xff\x14\x33\x93\x98\x5a\x11\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0x4c, 0xbd, 0x54, 0x82, 0x43, 0xa5, 0x2e, 0x91, 0xb8, 0xc8, 0x49, 0x6b, 0xb2, 0xb7, 0xc7, 0x6c, 0x74, 0x1e, 0x83, 0x4a, 0x52, 0xf6, 0xe, 0x7c, 0x46, 0x63, 0xbc, 0xac, 0x41, 0xab, 0xef}}
	return a, nil
}

var _scriptsGet_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2d\xc8\x2f\x2a\x51\x70\xad\x48\xcc\x2d\xc8\x49\xf5\x73\x0b\x51\x48\x2b\xca\xcf\x55\x50\x42\x08\x28\x71\x71\x15\x94\x26\x29\xa4\x95\xe6\x29\xe4\x26\x66\xe6\x69\x68\x5a\x29\x84\x7a\xe6\x95\x98\x99\x28\x54\x73\x29\x28\x28\x28\x14\xa5\x96\x94\x16\xe5\x21\x99\xa0\x57\x92\x5f\x92\x98\x13\x5c\x5a\x50\x90\x53\xc9\x55\xcb\x05\x08\x00\x00\xff\xff\xb3\x36\x44\x68\x62\x00\x00\x00"

func scriptsGet_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_total_supplyCdc,
		"scripts/get_total_supply.cdc",
	)
}

func scriptsGet_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xf7, 0xfd, 0x89, 0x44, 0x74, 0x88, 0x5b, 0x29, 0xd8, 0x20, 0xeb, 0x11, 0xe0, 0x17, 0xe7, 0xfc, 0x31, 0xdb, 0x36, 0x7c, 0x7a, 0xc8, 0x3e, 0x28, 0xb2, 0x81, 0xb0, 0xec, 0x29, 0xfb, 0x26}}
	return a, nil
}

var _transactionsNftforwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcd\x6e\xa3\x30\x10\xbe\xf3\x14\x53\x0e\x15\xb9\x90\x3b\xea\x8f\xb2\xd1\x66\x4f\x1b\x55\x34\x2f\x60\xcc\x00\x56\x1c\x1b\x8d\x4d\xe9\xaa\xca\xbb\xaf\xcc\xaf\x61\xa3\xac\xea\x43\x12\x99\xc9\x37\xf3\xfd\x0c\xe2\x52\x6b\xb2\x70\xd4\xea\xd0\xa8\x52\x64\x12\x4f\xfa\x8c\x0a\x0a\xd2\x17\x08\xd7\xd7\x61\x30\xd4\xff\xfc\x64\x97\x5a\xe2\xf1\x70\x1a\x2a\xe7\x8b\xa9\xe6\x78\x38\x1d\x34\xb5\x8c\x72\xa1\xca\x11\xd0\xbf\x0b\x83\x60\xbb\xdd\xc2\xa9\x12\x06\x2c\x31\x65\x18\xb7\x42\x2b\x10\x06\xda\x8a\x59\x60\x0a\x18\xe7\xba\x51\x16\x5a\xdd\xc8\x1c\xa8\x51\xdd\x3f\xac\x06\x5e\x31\x55\x22\xd8\x0a\xbd\x3e\x48\x40\xc8\x45\x2d\x50\xd9\x20\xf0\x20\x23\x85\x6d\x3a\x3e\xd9\xe5\x39\xa1\x31\x09\x0c\x3f\x36\xf0\x15\x04\x00\x00\x0e\x3a\xc5\x02\x09\x15\x47\xd7\x64\x42\x1f\xc0\x53\x34\xba\x21\x8e\x5d\xb5\x44\x0b\xc5\xd8\x37\xc5\x22\x81\xc7\x05\xbb\xd8\x9f\x6b\xc2\xdf\x6b\x29\xb1\xa7\xd9\x22\xb4\x42\x4a\xc8\xd1\x88\x52\x31\x8b\xc0\xcc\x88\xe8\x14\x9b\xa9\x8c\xed\x7c\x16\x33\x50\x02\x7b\x56\xb3\x4c\x48\x61\xff\x3c\x3d\x7e\xad\x3d\x8b\xe7\xca\xb7\x26\x93\x82\x5f\x5f\x7a\xba\x35\x61\xcd\x08\x23\xd7\x1d\x29\x81\x5d\x63\xab\x5d\xaf\xb7\x93\x04\x86\xb3\xdd\xc2\x0f\x4d\xa4\x5b\x20\x5f\x9b\x95\xea\x9e\x30\xee\x18\x94\x45\xec\xab\x03\xcf\xd0\xf7\x99\x4a\xdc\x89\xb3\x0e\xf9\xe9\x8e\x72\x2f\x91\x4b\x4e\xb2\x4c\x53\xfc\x6e\x35\xb1\x12\xdf\x98\xad\x36\x0b\xc4\xd7\x57\xa8\x99\x12\x3c\x0a\xf7\x5d\x64\x94\xb6\x90\xfd\x67\xfc\x70\x13\xf8\x6c\x7f\xa1\x85\x14\x39\x8a\x0f\x24\x4f\xda\x3e\xc1\x2e\x12\xb4\x4a\xd2\x98\xd2\x25\xfb\xdb\x66\xc1\x33\x94\x68\x07\x99\x6f\xc5\x72\x49\x27\x2e\xd1\x7e\xd7\xdd\x68\xde\xc5\x7f\x9e\xf6\x82\xf9\x6c\x7f\xb3\x33\x82\x69\xa8\xdf\xa5\x75\x3d\xf0\x99\xbf\x30\xf0\xc1\xa4\xc8\x21\xc3\x42\x13\xc2\x45\x28\xeb\x72\x3a\x6c\xc9\x04\x2a\x0a\x78\xb8\xa3\x40\xcc\x2b\xe4\xe7\xc8\x8f\x58\x97\xc6\xd1\xb5\xbb\x03\x38\x3b\xbb\x21\x1e\xc2\x59\xa8\x6b\xd0\x7f\x76\x5f\xf8\x89\xbc\xb1\xb8\x0c\xf0\x7b\xbf\x3c\xab\x95\xba\x19\xd4\xb8\x7f\xb3\x4c\x83\x2f\x3c\x4a\xee\x59\xbb\x19\xc6\xb8\x06\x7f\x03\x00\x00\xff\xff\x0a\x6c\xe1\x43\x55\x05\x00\x00"

func transactionsNftforwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingChange_forwarder_recipientCdc,
		"transactions/NFTForwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftforwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x2c, 0x41, 0x20, 0x4f, 0x52, 0x4, 0xb5, 0x3f, 0x23, 0xd3, 0x68, 0x23, 0xb7, 0x1f, 0x49, 0xf5, 0x59, 0xab, 0x1a, 0x56, 0x39, 0xad, 0x6c, 0xbf, 0x77, 0x34, 0x17, 0x4c, 0x74, 0x5f, 0x44}}
	return a, nil
}

var _transactionsNftforwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xcd\x6e\xea\x3a\x10\xc7\xf7\x79\x8a\x81\x45\x6f\x90\xce\x49\xf6\x88\x22\x55\xe8\x72\x57\x07\x55\x14\xdd\xfd\xe0\x4c\x12\x8b\x60\x47\xb6\x43\x5a\x55\xbc\xfb\x91\xf3\xed\x84\x96\x56\x6a\x56\xd4\x9d\xcf\xff\xfc\x3c\x09\x3f\xe7\x52\x19\xd8\x49\xb1\x2d\x44\xc2\x8f\x19\x1d\xe4\x89\x04\xc4\x4a\x9e\x61\x3e\x3e\x9e\x7b\x8d\xfd\x1f\x32\x18\xa1\xc1\xff\x39\x95\xba\x31\x76\xce\x3a\xcb\x7f\x5f\xf1\x9c\x67\xb4\xdb\x1e\x1a\xb3\xfe\xa0\xb3\xd9\x6d\x0f\x5b\xa9\x4a\x54\x11\x17\x49\x9b\x7a\x78\x36\xf7\xbc\x30\x0c\xe1\x90\x72\x0d\x46\xa1\xd0\xc8\x0c\x97\x02\xb8\x86\x32\x45\x03\x28\x00\x19\x93\x85\x30\x50\xca\x22\x8b\x40\x15\xa2\xf2\x30\x12\x34\x19\xe0\x46\x53\x16\x43\x91\xdb\x83\xb8\x0e\x6b\xb3\x6a\xfb\x37\x42\x44\x9a\x27\x02\x0d\x45\x95\x93\x22\xc6\x73\x4e\xc2\xfc\xa3\x81\xc9\x2c\xa3\x2a\x99\xe7\x0d\x32\xfb\x9d\xcd\x53\x14\x29\xd2\x7a\x09\xcd\x8f\x05\xbc\x7b\x1e\x00\x40\xae\x28\x47\x45\xbe\x0d\x4d\x6a\x09\x4f\x85\x49\x9f\xea\x22\xad\x0d\x34\x4f\x18\xc2\x26\x45\x91\x50\x9f\x16\x50\x44\xa0\xc8\x14\x4a\x00\x8f\xc1\xa4\xd4\x75\x87\x99\x22\x8c\xde\x20\x45\x6d\x9b\xee\x45\x22\xd5\x45\xe4\x31\xd4\x39\x83\xa3\x54\x4a\x96\xab\x07\x47\xcb\x60\xe8\xb4\xf6\xad\xda\x4b\x77\x02\xc1\x8b\x91\x0a\x13\x7a\x46\x93\x2e\x60\xf6\x08\x82\x67\x6d\x57\xed\x93\x91\x69\x85\x24\xb5\xa7\x18\x1e\x7f\x32\xe9\x6c\x92\x4b\x50\xb9\x6f\xf5\xd9\x74\x33\x81\x47\x48\xc8\x34\xaa\x4e\x66\xb2\x70\xa2\xd8\x27\x48\xc8\x6c\x30\xc7\x23\xcf\xb8\x79\x5b\x3d\xbc\x8f\x01\x0f\xfa\xd8\xcf\xc5\x31\xe3\xec\xba\xf6\x7b\x60\x27\xff\xad\x8a\x75\x85\x09\x43\xf8\x83\x27\x02\x5d\x28\xaa\x46\x37\xf6\x01\xd6\x15\x60\xf9\xbd\x60\xc6\x23\x38\x52\x2c\x15\xc1\x99\x0b\x63\xaf\x80\xf5\xdb\x6d\x0f\x4e\x60\x1e\xc3\xec\xb6\x0a\x01\x4b\x89\x9d\xfc\x21\x55\xed\x93\xa3\xe0\xcc\x9f\xef\x07\x44\xdf\xa9\x47\x48\x53\xd7\x34\x9b\xbb\xfa\x5d\x27\x7d\xbe\xd4\x73\xe9\xc1\x75\x0c\x86\x74\x04\xac\x42\xbc\x2b\xc3\x1f\x36\xb2\xfc\x60\xb8\x6e\xfa\xfa\x3e\x78\x37\xaa\x09\x43\xf8\x8f\x0c\xec\x89\x11\xbf\x90\x82\x7e\xc0\xf5\x2a\xb1\x62\x8e\xd1\x68\x2f\x94\x37\x64\x4c\x4d\x6b\xd8\x60\xfe\x1d\xc6\x46\x7c\x4d\xc6\xf1\x15\xe0\x1c\xa7\xb5\x3f\x89\x71\x07\x47\xc7\x7e\xe1\xa8\xf4\xf3\x5c\x5a\x26\x6f\xab\xd6\x33\xd9\x32\xf8\x0d\xee\x46\xd3\xdd\x28\x42\x43\x80\x15\x6c\xc3\x45\x02\x8a\xb4\x2c\x14\x23\x67\x8c\x1d\x78\xb0\xfa\x3d\xda\x31\xac\x8a\xb4\xa3\x72\x18\xa5\x9f\xe9\xf2\x03\x04\x5c\x19\x35\x5e\x08\xb8\xb1\xaf\x8e\xc1\x6a\xee\x2c\x9a\x35\x68\xad\xfc\xd5\xef\xae\x98\x5f\x60\xe4\x67\x2b\xcf\x49\x51\x88\x8c\x8b\x13\xd0\x2b\xd7\x95\xee\x83\x8d\xd7\xa9\xc6\xa9\x79\xf1\xde\x98\x7d\xff\x0a\x70\x80\xbc\xbf\xca\x1c\x98\xab\x11\xae\x1e\xa6\x5b\xe5\x2e\xc4\xbf\x3e\xa3\xb6\xff\x79\xdf\xcd\xf9\xa6\x08\xf6\xa4\x65\x76\x21\xd5\xfb\xb9\x1b\x6a\x3d\xd9\x81\x8d\x0a\xb5\x9e\x5f\x6f\xdf\xe5\x8f\xb5\xfc\xe5\x13\x70\x63\xa9\x2a\x08\x7a\xe6\xca\x94\x9a\x0b\xd6\x7f\x3a\x34\x1f\x25\x47\x1a\x43\x62\xab\xba\xf5\x16\x6a\x77\xd9\x75\x74\xff\xef\x34\xe0\xea\x67\x50\x25\x64\x3e\x61\xae\xb3\xae\x1b\xbf\x7a\x57\xef\x6f\x00\x00\x00\xff\xff\x0f\xef\x28\xd5\x0f\x0a\x00\x00"

func transactionsNftforwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingCreate_forwarderCdc,
		"transactions/NFTForwarding/create_forwarder.cdc",
	)
}

func transactionsNftforwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0xac, 0x33, 0x3f, 0x4, 0x9f, 0xb6, 0x19, 0x9, 0xda, 0x14, 0x6a, 0xe1, 0xf8, 0x79, 0xd8, 0xe8, 0xd9, 0x10, 0x7b, 0x15, 0x8f, 0x29, 0x70, 0x35, 0x5d, 0x86, 0x56, 0xe8, 0x7b, 0x61, 0xd8}}
	return a, nil
}

var _transactionsNftforwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\xe6\xd3\xe1\x8b\x0c\x34\xf6\xa5\xe8\xc1\xc8\x0f\x82\xa4\x01\x72\x49\x03\x37\x7d\x00\x9a\x5a\x49\x6c\x65\xae\x40\xae\xe2\x04\x41\xde\xbd\xa0\x7e\x68\xcb\x76\xaa\x93\x44\xed\xcf\xec\xcc\x2c\xcd\xa6\x61\x27\x78\x64\x7b\xdf\xda\xd2\xac\x6b\x7a\xe6\x3f\x64\x51\x38\xde\x20\x3d\x3c\x4e\x93\x21\xfe\xfb\xab\xda\x34\x35\x3d\xde\x3f\x0f\x91\xbb\x83\x34\x49\x16\x8b\x05\x9e\x2b\xe3\x21\x4e\x59\xaf\xb4\x18\xb6\x30\x1e\x05\xbb\xfe\xa8\x20\xe7\x8c\x2d\xa1\x2c\xc6\x12\x5d\x12\x5b\x82\xd2\x9a\x5b\x2b\x10\x86\xb2\x2c\x15\x39\xb4\x3e\x04\x4b\x45\x70\xa4\x4d\x63\xc8\xca\x99\xc7\x8a\x34\x99\x17\x72\x70\xe4\xb9\x75\x9a\xba\x12\xdb\xca\xe8\x2a\x34\xdb\xb0\x23\xd4\x66\x63\x84\x72\x48\xa5\x2c\x14\x6e\xb9\xae\xa9\x83\xf3\xd4\xae\x6b\xa3\xb1\x1a\x53\x93\x3d\xa8\x59\xec\xb2\xc4\x4d\x9e\x3b\xf2\xfe\x0b\xb6\x46\xaa\xdc\xa9\xed\xc3\xdd\x12\xbf\x1e\xac\x7c\xfb\x3a\xc3\x7b\x92\x00\x40\x68\xbb\xa2\x82\x1c\x59\x4d\x01\x77\x40\x3a\xc6\x93\x3b\xf3\xd0\xb1\x6f\x97\x50\x93\xc4\xff\x2b\x2a\x96\xf8\x7f\x47\xdf\x7c\x87\xf1\x54\x75\x2e\xba\xea\x71\x76\x61\xe4\xd4\xb0\x37\xd2\x9d\x07\x36\x85\x63\x93\xe1\x57\xdf\xe3\xfd\x50\xcd\xf9\x58\xe5\xa3\xef\xd4\x38\x6a\x94\xa3\xcc\x9b\xd2\x92\x5b\xe2\xa6\x95\xea\xa6\x57\x23\xcc\x8a\xe1\x59\x2c\xb0\x66\xe7\x78\x0b\x05\x77\x38\x76\x9f\x7b\xe6\x3b\x24\x07\x63\x87\xc7\x53\x5d\xcc\xf7\x66\xc7\xe5\x90\x12\x23\xc2\x33\xef\x1b\x5c\x9c\xe6\xe5\x2a\x0b\x86\x59\xe2\xe4\xcf\x9f\xc2\x4e\x95\xf4\xa4\xa4\x9a\x4d\x6a\x5e\x5f\xa3\x51\xd6\xe8\x2c\x1d\x66\x42\xce\xe4\x61\x59\xe0\x25\x78\x45\x59\xf0\xfa\x37\x69\x81\xea\xc9\xf4\x0d\x69\x53\x18\xca\xd1\x28\xa9\xd2\x59\xb2\x4f\x41\x49\x32\x75\xa4\x47\xd3\x7b\x6a\x34\x70\x5f\x2c\xe6\x04\x3d\x62\x30\x2e\x43\x81\x01\xc8\xce\x6f\xd3\x16\x91\xe5\xa1\xf0\x11\xd9\xa7\xb6\x61\xca\xf4\xce\x00\xb8\xdc\x85\x4f\xb9\x2e\x49\x6e\x55\xa3\xd6\xa6\x36\xf2\x96\x9d\x24\xb5\xdf\x96\x63\x4e\xa3\x4e\xff\xf0\xd6\x55\xf6\x99\x0e\xb7\xdc\xd6\x79\x27\xc0\xe7\x7e\x3a\x35\x62\xda\x17\x1c\x5c\x4b\xaf\xa4\x5b\xa1\x71\x19\x07\xee\x46\x8b\xc5\xad\xe8\xae\xa9\xf0\xc1\x5b\x7b\x6a\x27\x47\x89\x6c\x21\xb8\x38\x3f\xf2\x69\x7c\xcf\xf6\x2f\x82\xdd\xfb\x54\xb9\xbb\x83\x95\x34\x76\x3a\xcc\x67\x22\x8d\xaf\x99\x04\x0e\x97\xb8\x38\xb7\x85\x4c\xa6\x6d\xd8\xcb\xde\x2e\xfe\x77\x84\xb3\x24\x79\xb8\xf3\xd9\x6c\xae\xd9\x8a\x32\xd6\xef\x01\x9e\x2d\x91\xfe\x70\xa6\x34\x56\xd5\x3d\x0f\xf0\x55\x14\xa1\x52\x2f\x14\x11\x2b\xfb\x16\x2e\xd0\x74\xe8\xfd\x91\xfc\x0d\x00\x00\xff\xff\x11\x22\x3e\x47\x29\x06\x00\x00"

func transactionsNftforwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingTransfer_nft_to_receiverCdc,
		"transactions/NFTForwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftforwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4b, 0xd3, 0xa5, 0x30, 0x5f, 0x73, 0x1b, 0x95, 0x64, 0x17, 0xd3, 0x8e, 0xd0, 0xe, 0x1d, 0x9e, 0x51, 0xa0, 0xe1, 0xa7, 0xf8, 0xc9, 0x35, 0x97, 0x61, 0xee, 0x18, 0xb0, 0xd2, 0xfd, 0x80, 0xb3}}
	return a, nil
}

var _transactionsNftforwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xfb\x29\x06\x1d\x8a\x0c\x46\xba\x87\x12\x08\xa1\xbe\xd5\x84\xd4\xed\x7d\xbc\x1a\x49\x8b\xd7\xbb\x62\x34\x6b\x37\x18\x7d\xf7\xa2\x3f\xd1\x3f\x1c\xd2\x43\x74\x12\xc3\xef\x31\xef\xcd\xcc\x9a\x73\xe5\x59\x60\xef\xdd\x2e\xb8\xc2\x1c\x2d\x1d\xfc\x89\x1c\xe4\xec\xcf\x10\xad\xcb\x91\x1a\xf8\x9f\x24\x98\xa1\xe0\x1f\x43\xd7\x7a\x80\x17\xb5\x91\xfc\xf1\x17\xcf\x95\xa5\xfd\xee\x30\x60\x53\x61\x64\xf6\xbb\xc3\xce\xf3\x15\x39\x33\xae\x78\x6f\x3d\xaf\x45\x4a\xa5\x69\x0a\x87\xd2\xd4\x20\x8c\xae\x46\x2d\xc6\x3b\x30\x35\x5c\x4b\x14\x40\x07\xa8\xb5\x0f\x4e\xe0\xea\x83\xcd\x80\x83\xeb\x14\xe2\xc1\x1a\x77\x02\x04\xed\xad\xa5\x5e\x25\x1e\x8c\xd4\x50\x85\xa3\x35\x1a\x6a\xf1\x8c\x05\x75\x38\xe6\x42\x0c\x25\x5e\x5a\x1f\xda\xbb\xdc\x14\x81\x29\xeb\xf0\xc9\x10\xb1\x52\x73\x17\x37\xa5\x00\x00\x2a\xa6\x0a\x99\xe2\xda\x14\x8e\xf8\x01\x9e\x82\x94\x4f\xbd\xab\x0d\xdc\x3a\xa4\xfd\x4c\x0e\x3d\x91\x14\x24\xcf\x58\xe1\xd1\x58\x23\x6f\xf1\x34\x97\xe4\x79\xf4\xfa\xd2\x79\x7c\x41\x29\x37\x89\x2e\x49\x9f\xbe\x7f\xbb\xcd\xc0\xe9\x77\x2d\x69\x1e\xe3\x79\xd3\xf6\xb3\xbe\x88\xa3\x89\x03\xb4\x4c\x98\xbd\xcd\x73\xe6\x9e\x61\x6a\x19\x6d\x16\x7a\x26\x09\xec\xc6\x52\xa3\xbe\x2e\xd2\xfa\xce\x92\x57\xd2\x64\x2e\xc4\x1f\xc5\xf8\xed\xda\xb5\xb6\x5b\x9a\xaf\xa5\x3f\x9d\x0f\x03\x0c\x1e\x43\xa7\xfd\xd4\xdc\xbd\xa0\x69\x0a\x9a\x09\x85\x00\xdf\xcf\x47\x8f\x71\xbb\xe9\x49\x49\xb3\x53\x53\xab\xd6\x6d\xe3\x7b\x71\xd7\x06\xb6\xf0\x5f\x4b\xde\x2e\xdf\x61\xf2\x4a\xb5\xb7\x17\xe2\x89\x6b\x1e\xe3\xc5\x08\x3e\x09\xbd\x5d\xc0\x82\x5c\x90\x3c\xdc\x17\xfd\xea\x9f\x4d\xab\x1a\x45\xfd\xcc\x1a\xd5\xa8\x7f\x01\x00\x00\xff\xff\x8c\xce\x14\xd5\x57\x04\x00\x00"

func transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
		"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftforwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0xbe, 0x1d, 0xd2, 0xaf, 0xb9, 0xb2, 0xcf, 0x3e, 0x14, 0xb2, 0x8a, 0x75, 0x4c, 0xff, 0xd6, 0xf0, 0x9e, 0x6b, 0x46, 0xe, 0xa, 0x78, 0x20, 0x58, 0x9a, 0x97, 0xf7, 0x5c, 0xfb, 0x20, 0x55}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6e\x9b\x40\x14\xbc\xf3\x15\x53\x0e\x2d\x1c\x8a\x2f\x55\x0f\x28\x6d\x14\xd5\x8d\xe4\x4b\x54\xa5\xee\x07\x2c\xbb\x0f\xef\xb6\xeb\x7d\x68\xf7\x51\x52\x45\xf9\xf7\x0a\x83\x8d\x63\x59\xd9\x0b\x68\x99\x37\x33\x6f\x06\xb7\xef\x38\x0a\x1e\x38\xdc\xf7\x61\xe7\x1a\x4f\x5b\xfe\x43\x01\x6d\xe4\x3d\xf2\xcb\xeb\x3c\x9b\xf1\xdf\x9f\xd4\xbe\xf3\xf4\x70\xbf\x9d\x91\xcb\x45\x9e\x65\xab\xd5\x0a\x5b\xeb\x12\x24\xaa\x90\x94\x16\xc7\x01\x83\x13\x6b\xa2\x1a\x12\x54\xc0\x69\x50\x2c\x21\xb9\x5d\xa0\x98\xa0\xd9\x7b\x9a\xc0\x2a\x18\x18\x4a\x12\xf9\x5f\x82\x93\x2c\x3b\x63\x2a\x9c\xa9\xf1\x6b\x13\xe4\xf3\xa7\x12\xcf\x59\x06\x00\xa3\xe2\x23\xb5\x14\x29\x68\x82\x58\x25\x18\x9c\xf7\x68\x08\x7d\x22\x83\x96\xe3\x41\x8a\x87\x40\xf1\xc3\xb9\xd4\x61\xdc\x93\x9c\x5d\x3d\x52\x5b\xe3\xfd\xb2\x51\xf5\x6d\x41\x1f\xe0\x5d\xa4\x4e\x45\x2a\x26\xe3\x35\xee\x7a\xb1\x77\x5a\x73\x1f\xe4\xe4\x68\x72\x85\x86\x63\xe4\x01\x0a\x71\x71\xc7\x6f\x59\x19\x4f\x22\xdf\x56\xaf\xfc\xe0\xcb\x9c\x52\x35\x11\xde\x5c\xb7\xf7\xb5\x18\x43\xad\x71\xf5\xe3\x4f\xe1\xa8\x76\xf4\x43\x89\x2d\x4f\x52\xe3\xb9\xbd\x45\xa7\x82\xd3\x45\x3e\x2f\x01\xc3\x94\x10\x58\x90\x84\x23\x8d\x85\x71\xf3\x9b\xb4\x40\xc9\xd4\x58\x47\xda\xb5\x8e\x0c\x3a\x25\x36\x2f\xa7\x95\x5f\xa6\x07\x3d\x91\xee\x85\x2e\x82\x38\xd6\x7f\x98\x7f\x55\xff\x1b\x41\x8c\xbd\x84\x56\x70\xf3\xf1\x4a\x26\xd5\x91\xb2\x38\xbe\x6c\xd6\x35\x9c\x29\x17\xdd\xf9\x17\x1a\x39\xce\x1d\x76\x9c\x04\xcf\x27\xd4\xbb\x2b\xdc\x3b\x92\xcd\x3a\x15\x65\xa5\x39\x88\x72\x21\x15\xce\x94\x35\xf2\xed\xec\x7e\x94\xbc\x88\x62\xb3\x46\xb2\xdc\x7b\x03\xab\xfe\x12\x1a\xa2\x00\x43\x9e\x84\x4c\x3e\xab\xbf\x64\xff\x03\x00\x00\xff\xff\x99\x7a\x9b\x2e\x70\x03\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x3e, 0x2b, 0xc, 0x3, 0xf5, 0xaf, 0x41, 0xd9, 0xe9, 0x8c, 0xe3, 0xb1, 0xaa, 0x29, 0xef, 0xf1, 0xb3, 0xac, 0xb3, 0x96, 0x3f, 0xb9, 0x77, 0xfe, 0xc1, 0x55, 0x4f, 0xb7, 0xf7, 0xf7, 0xe2}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4b\x6f\xdb\x3a\x13\xdd\xeb\x57\x4c\xbd\x48\x65\xb4\xb0\xbf\x02\x45\x17\x42\x9d\x22\x8f\x2f\x40\x16\x0d\x8a\xc4\xbd\x9b\x20\x0b\x8a\x1a\x5b\xbc\xa1\x49\x5d\x72\xe4\xc4\x08\xf2\xdf\x2f\xf8\xd0\x83\x8e\x1a\x5c\x2e\x12\x99\x3c\x33\xe4\x9c\x39\x33\xa4\xd8\x35\xda\x10\xdc\x68\x75\xd5\xaa\xad\x28\x25\xae\xf5\x23\x2a\xd8\x18\xbd\x83\xd9\xf1\xf4\x2c\x8b\xf8\xff\x3f\xb3\x5d\x23\xf1\xe6\x6a\x1d\x91\xc3\x44\x8f\xf9\x89\xc4\x2a\x46\xec\x2f\x81\x4f\x36\xc2\x92\xb9\x1e\x39\xb5\xf5\xd1\xbe\xd9\x72\xb9\x84\x75\x2d\x2c\x58\x6e\x44\x43\xd0\x5a\xb4\x40\x35\xc2\xcd\xd5\xfa\xa7\x50\x84\x06\x0c\x5a\xdd\x1a\x8e\x40\x1a\x76\x42\x11\x30\x50\xf8\xe4\x00\xde\xfa\x9a\x60\xd7\x5a\x82\x12\xc1\xb4\x0a\x9e\x04\xd5\xde\x01\xe3\x5c\xb7\x8a\x80\x6a\x46\x50\xb3\xe0\x75\x97\xba\xf4\x0e\x2c\x69\x83\x15\x08\x05\x4b\xf7\xc9\xb6\xb8\xec\x37\xcf\x32\x32\x4c\x59\xc6\x49\x68\x95\x67\x00\x00\x06\xb9\x68\x04\x2a\x2a\xe0\xac\xaa\x0c\x5a\xfb\xd9\xcf\x2b\xb6\xc3\x02\xee\xc8\x08\xb5\x0d\x33\x15\x86\xa0\x84\x56\xe9\x02\xd5\xed\xae\x54\x4c\xc8\x74\x9a\xb7\x64\x0b\xb8\xff\x7d\x25\x9e\xbf\x7d\x7d\x08\x73\x46\x1f\x98\xa4\xc3\xe5\xe0\xca\x41\x82\x55\x0a\x39\x47\x85\x1b\xc1\x05\x33\x02\x1d\x26\x1e\xee\x01\xb2\x39\xbc\x64\x1e\xe9\xa2\x95\x9a\x33\x09\x7b\x66\x04\x2b\x25\xc2\x46\x1b\x4f\x80\x50\xdb\x94\xa0\x0d\x1a\x54\x1c\xbd\x9d\x44\x8a\x0b\x05\x9c\x0c\x92\x58\x8c\x68\xea\xdc\xdf\x76\x86\x2e\x5b\xce\xa1\x41\x8e\x62\x8f\xe6\xa3\x05\xae\xa5\x44\xcf\x64\xef\xb5\x27\xf3\xa2\x5f\xbb\xc5\x4d\x01\x27\x2f\xc7\x1a\x5d\x0c\x88\x5f\x6d\x29\x05\x7f\x1d\x36\xfd\x65\x70\x2f\x74\x6b\x9d\x26\xe0\xfa\x12\x4a\xdc\x68\x83\x7e\xfb\x51\xfa\x00\x9f\x91\xb7\x84\x36\x89\x49\xa8\xed\xf5\xe5\xb9\x37\x28\xe0\xf7\xb5\xa2\x6f\x5f\x83\xe3\xc6\x60\xc3\x0c\xe6\x56\x6c\x95\x0b\xfc\xac\xa5\xfa\x2c\x68\xca\x11\x0a\x71\x58\x94\x9b\xc5\x91\x23\x58\x8d\x2a\x69\x41\x9a\x98\xbc\x6b\x9b\x46\x1e\xb2\xde\x6c\xb9\x84\x52\x1b\xa3\x9f\x80\x0d\x64\x77\x9c\x4d\x68\x5f\x28\x88\xe2\x7c\xbb\x33\x1a\x58\x41\x38\xe6\x22\x38\xfd\x3e\x99\xa5\xd3\xdc\xd5\x60\x31\x3e\x5b\x58\xb8\x0b\x9e\x7f\x31\xaa\xe7\xbd\x7b\x37\x7e\xfc\x80\x86\x29\xc1\xf3\x59\x8c\x1c\x2a\x8d\x16\x94\xa6\x50\x35\xc0\x14\xe8\xf2\x6f\xe4\x04\x8c\xfc\xd1\x6d\x83\x5c\x6c\x04\x56\xd0\x30\xaa\x67\xf3\x24\xe2\xf3\x10\x71\x94\x45\x48\xfc\x47\x0b\x8d\xcf\xa7\x4f\xde\x20\x91\x23\x09\xf6\x01\x4f\x2b\x06\x56\xb0\x45\x8a\x87\xcc\x7b\x4c\x1a\xcd\x62\x8b\x74\xc1\x1a\x56\x0a\x29\xe8\x90\x8f\x68\x38\xd6\xd6\x5b\x26\x7a\x62\xff\x83\x30\x4f\xf3\x3f\xb1\x78\xa1\x5b\x59\x79\xfa\xb6\x41\xfc\xbe\x34\x26\x05\x00\x83\xdb\x59\x70\xf7\xda\xeb\x72\x24\x3f\xd7\x33\x16\x12\xd5\x96\x6a\x58\xad\xa6\xda\x45\xb7\x7a\x72\xf2\x07\x70\xd2\x38\xe2\x72\x01\xb3\x33\x63\xd8\x01\x22\xda\xd6\xfe\xe4\x25\x02\xfe\xd3\x32\xe9\xdb\x46\x34\x07\x83\x92\x11\x56\x50\x21\x31\x21\xed\x6c\x7c\xd8\x58\x72\x5d\x03\x8a\x3a\xb8\x30\xc8\x28\xd4\x67\xe7\x24\x1a\xf7\xa8\x3d\x33\x10\x14\xb7\x82\xff\x25\xb3\xc1\x22\xf4\xb8\xe4\xde\x59\xdc\x06\x5f\x0f\xb0\x82\xfb\x87\xde\xe6\xa9\x16\x12\xdf\x8b\x15\x4e\xe3\x4e\x2f\x49\xd6\x5c\x83\x28\x7b\xf8\x01\xa6\xf9\xba\xf7\xa6\x0f\xef\x59\x0e\x92\x4b\x55\x3a\x82\xbc\xa7\xd3\xef\x27\x2f\xa9\xde\x6e\xa3\x6c\x5e\x4f\xf3\x34\xfe\x2d\x52\xa4\xa0\x83\x0c\x6a\xce\xe7\xa3\x52\x8c\x69\xf8\xc9\x1e\x11\x6c\x6b\xd2\x4c\xf0\xe1\xb8\xc2\xc2\x9e\x49\x51\x75\x0d\x35\xb6\xb9\x4e\xa2\x89\x3f\xb1\x81\x0f\x93\x41\x2f\x78\x8d\xfc\x31\x9f\xc3\x4b\x57\x05\xe7\x23\x56\xd3\xdd\x5c\x65\xf8\x1d\x3f\xcc\xe6\x9d\x84\xba\xd1\xe7\x7d\xc1\x9a\x06\x55\x95\x27\xab\x6e\x4c\xaa\xe1\x2d\x0c\xc2\x25\xee\x09\x2a\xa6\x13\xf5\x79\xd2\x88\xb7\x54\xf8\x1a\x8a\x49\x9f\x46\x25\xb7\xfe\x44\x3d\x4e\x29\xc6\x8d\x54\x03\xe9\xaf\xae\x12\xc2\xff\x4f\xf0\xa5\x5f\x7d\xcd\xb2\xa4\xb4\x5c\x43\xef\x5b\x08\x53\xae\x2a\x1b\x6d\x05\x81\xa0\xd1\x8d\xdc\xb7\xde\xa3\x2b\x19\xd2\x6b\xc5\xff\xbb\xb9\x5a\xa7\x1c\x8e\x1e\x40\xef\x74\xe4\x94\x9c\xf0\x38\x72\x7f\xd3\xf9\x84\xac\xd1\x8f\x14\x35\x7a\x2f\xf5\x9f\x9f\xa7\xc5\x51\x0c\x9f\x59\xca\x65\xd7\x3e\xb5\xa5\xe3\xeb\x7b\x3a\x02\x57\x4f\xd7\x97\x36\x9f\x2f\xb8\x56\xc4\x84\xb2\xf9\xd4\x65\x3f\x2f\x60\xb6\xae\x11\x14\x3e\x53\xf7\x00\x89\xed\xb2\x66\x7b\x84\x12\x51\x85\xd7\x53\x15\x13\x22\x9d\xf2\xb0\x9a\xf5\x87\x98\x7e\x2c\xb8\x16\x3d\xf9\xba\xf8\x04\x5f\xe2\x9e\x1e\x0d\x36\xc0\xdf\x6c\x2a\x14\x37\xc8\x2c\x56\x50\x1e\xe0\x4b\xd7\x97\x5f\x33\xf8\x37\x00\x00\xff\xff\x8a\x92\xfa\x0c\x1e\x0c\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb3, 0x13, 0xa3, 0xdb, 0x95, 0x74, 0xf3, 0x2c, 0x90, 0x7b, 0xe8, 0xc6, 0xef, 0xe1, 0x20, 0xfd, 0x56, 0xbd, 0x20, 0xe, 0xdb, 0xe1, 0x28, 0x98, 0x36, 0xc6, 0xfe, 0x4c, 0xc4, 0x46, 0xe8, 0xf1}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcf\x6e\xe2\x4c\x10\xc4\xef\xf3\x14\xf5\x71\x88\x8c\x44\xf0\x3d\xe2\x8b\x14\x45\xe1\xb6\x28\xca\xa2\xbd\x37\xa6\x8d\x47\x19\x66\xac\x9e\x36\x5e\x84\x78\xf7\x95\x8d\xd7\x7f\xb2\x48\xbb\x73\x42\xcd\xaf\xbb\xaa\xcb\x6d\x8f\x65\x10\xc5\x26\xf8\x75\xe5\x0f\x76\xe7\x78\x1b\x3e\xd9\x23\x97\x70\xc4\xec\x6b\x79\x66\x3a\xfe\xed\x27\x1d\x4b\xc7\x9b\xf5\xb6\x23\x87\x42\xcf\x7c\x63\xa5\x3d\x29\xfd\xb0\x5c\xc7\x0e\x9b\xd4\x66\xc6\xa4\x69\x8a\x6d\x61\x23\x54\xc8\x47\xca\xd4\x06\x0f\x1b\x51\x17\xa4\x20\x0f\xca\xb2\x50\x79\x45\x1d\x2a\xb7\x87\x54\xbe\xed\xd0\x80\xc8\x0a\xab\x91\x5d\x8e\xaa\x6c\x0a\xc2\x19\xdb\x13\x63\xb3\xde\x46\x63\xc6\xe3\x2e\xc6\x00\x40\x29\x5c\x92\x70\x12\xed\xc1\xb3\x3c\xe1\xa5\xd2\xe2\xe5\x36\x7e\x8e\x4b\x8b\x34\x2f\x4d\xf1\xc1\x5a\x89\x07\x93\xb8\x33\x6c\x0e\x2d\xb8\x37\x42\x4e\x98\xf6\x67\x14\x14\x41\xc8\x82\x73\xdc\xaa\xf4\xfd\x36\xc7\x4d\x61\xb9\x0b\x22\xa1\x5e\x3d\x0c\xd1\x2c\x5f\x7b\xfe\x39\x69\x02\x79\xc2\xdd\x3f\xbf\x6b\x10\x3a\xf0\x3b\x69\x31\xc7\x7f\xff\xc3\x5b\x37\x72\xd8\x3c\x69\x2d\xf6\xa5\xab\x19\xfb\x7f\x15\x26\x65\x10\x3c\xd7\xe0\x63\xa9\xe7\x7b\x46\x1d\xeb\xa8\x8c\xd5\xe3\xd8\x4b\xd6\x8e\x78\x6b\x7a\x07\x5b\xc9\x7c\x22\x13\xe9\xc4\xb0\xda\x84\x3f\x4a\xa8\x27\xba\x14\x1a\x2a\x59\x3d\x0e\x4a\x0b\x68\xf8\x87\xbd\x27\x52\xd9\xef\x8d\xca\x6a\xe7\x6c\x86\x8c\x4a\xda\x59\x67\xf5\x8c\x3c\x48\x2b\x7f\x67\xc3\xce\x81\xb3\xfe\x73\xf5\x70\xf9\x7a\xcb\x23\xdd\xf7\x76\xea\x62\x6c\x6a\xf8\xf9\x27\x36\x39\xe2\xe5\x07\xc7\xe0\x4e\x2c\x03\x77\x7d\x4e\x26\x1f\xeb\xee\xae\xb7\x61\xcd\xaa\x8b\x09\xac\x24\x07\xd6\xbf\x07\xd4\x37\xcd\xcd\xed\x02\xae\xe6\x57\x00\x00\x00\xff\xff\xa9\x43\x97\xcc\xcc\x03\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb, 0xb, 0xe3, 0xbb, 0x12, 0xb0, 0xfc, 0x89, 0xf4, 0xd1, 0x5d, 0xb7, 0x1, 0x93, 0xc0, 0xac, 0xf9, 0x12, 0xd2, 0x5f, 0x2d, 0xf3, 0xf, 0xd5, 0x4f, 0xcd, 0xc6, 0x6a, 0x99, 0xe7, 0xd7, 0x7e}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x2f\x3e\x14\x09\x1c\xf9\x52\x7a\x30\x4e\x42\x70\x63\xe8\xa1\x26\x14\xb7\xf7\xb1\x34\xb6\x97\xc8\xbb\x62\x77\x64\x35\x84\x7c\xf7\x22\xad\x2c\x79\xe5\x42\x4a\x75\x5a\xc6\xbf\xf9\xf3\x76\xdf\x58\x1d\x4b\x63\x05\x6b\xa3\x57\x95\xde\xab\x6d\xc1\x1b\xf3\xc2\x1a\x3b\x6b\x8e\x98\x8c\xc3\x93\xa8\xe3\xbf\xb3\x50\x4e\x42\xbf\x14\xd7\xae\x83\x83\x58\x4f\x3e\xfd\xa6\x63\x59\xf0\x7a\xb5\xe9\xb0\x21\x30\x89\xa2\xd9\x6c\x86\xcd\x41\x39\x88\x25\xed\x28\x13\x65\x34\x94\x43\x7d\x20\x01\x69\x50\x96\x99\x4a\x0b\x6a\x53\x15\x39\x6c\xa5\xdb\x0c\x31\x70\x2c\x50\xe2\xb8\xd8\xa1\x2a\x9b\x80\xe5\x8c\xd5\x89\xb1\x5e\x6d\x5c\xea\x6b\xee\x2a\xdd\x16\x6c\x73\x2a\xc7\x0e\xa7\x76\x5c\x31\x78\xd1\xa6\x46\x7d\x60\xcb\xe7\x62\x4d\x95\x03\x23\x33\x45\xc1\x43\x96\xd2\x70\x62\x2c\xed\x19\xa4\xf3\x86\xcd\x2c\x93\x70\xcb\xf2\xb1\x94\xd7\x8b\x8c\x34\x8a\x2e\x64\xc4\x94\xe7\x96\x9d\x9b\xe3\xd1\x1f\xa6\x28\xab\x6d\xa1\xb2\x67\x92\xc3\x1c\xcf\xfd\x79\x0a\x95\xcf\xf1\xf3\x9b\x96\x2f\x9f\x13\xbc\x45\x11\x00\x94\x96\x4b\xb2\x1c\x3b\xb5\xd7\x6c\xe7\x78\xac\xe4\xf0\xe8\x2f\xa3\x61\xd0\x7d\x05\xcb\xc5\x00\xb8\xc3\x9e\xa5\xc3\xce\xfd\x93\x1e\x6e\xbe\x74\xcf\xb2\xa4\x92\xb6\xaa\x50\xf2\x1a\x0f\x13\x8d\xb0\xad\xb1\xd6\xd4\x8b\x4f\x6f\x63\x0b\xa4\xcb\xbe\x9d\x97\x30\x0d\xcd\x90\xfe\x60\x67\x8a\x13\xdb\x81\x7b\xbf\x8f\xc3\xea\x0f\x0f\x28\x49\xab\x2c\x9e\x2c\xdb\x77\xd5\x46\xe0\x1b\x82\x60\x79\xc7\x96\x75\xd6\xbe\x4c\xf8\x24\x93\x24\x0a\x94\xdb\xae\x15\xee\x2e\x5f\xc1\x57\x6a\x86\x39\x8f\x12\x37\x17\xac\xf2\xe4\x26\xc8\xd6\x3b\x19\x66\x6c\x70\xdc\xf5\x15\xd3\xee\xd0\x84\xe3\xcd\x6b\xc9\x8b\x50\xe4\x7a\xb5\x19\x72\xbf\x92\xd0\x7d\x9c\x24\x37\x20\x77\x83\x0f\xc0\x41\xc1\x6c\x86\xa5\x37\x13\x41\x73\x7d\x65\x27\x17\x4c\xdb\xfe\x3a\x94\xc2\xe2\xf6\x5a\x40\xea\xcd\xf9\x14\xa2\x71\x12\xf4\x74\x74\x62\x28\x39\xdf\x6e\xb7\x61\x3d\xe1\x0d\x97\x36\x54\xbc\xb8\x1d\x75\x9d\x42\xcc\xfc\x2f\x7d\xbb\x1d\xf1\x3e\xba\x6c\x96\x9d\x05\x7a\xa3\x21\xeb\xad\x87\x9d\xb1\xe3\x8d\x1b\xcd\x50\x28\xfd\xf2\x6f\x0e\x1c\xfe\x53\xd2\xe1\xf8\x5f\x46\x0d\x7c\x7a\x2d\x74\xd8\x97\x69\x40\x0a\xd9\x3d\xcb\x07\x57\xd3\x67\xf8\x6d\x78\x8f\xde\xa3\x3f\x01\x00\x00\xff\xff\x54\xe3\x92\x54\x7f\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf7, 0xf0, 0x42, 0x39, 0xae, 0xed, 0xa7, 0x47, 0x78, 0xcb, 0x10, 0x51, 0xb4, 0x61, 0x6e, 0x4b, 0xaf, 0x34, 0x9d, 0x45, 0xa2, 0x33, 0x56, 0x1a, 0xdd, 0xd1, 0x17, 0x8b, 0x90, 0x9a, 0x3, 0x23}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x5f\x6b\xe3\x3e\x10\x7c\xf7\xa7\xd8\xe6\xa1\x4d\x20\x24\xef\xa5\x2d\xb4\xfd\x51\xf8\xc1\x95\x2b\x6d\xaf\xf7\x9a\x8d\xbc\xb6\x97\x28\x92\x91\xd6\x49\x4d\xc8\x77\x3f\x24\xff\x89\x75\x5c\x1f\x0a\xb1\x46\xb3\xb3\x33\xa3\x6c\xbd\x5e\xc3\x67\xc5\x1e\xc4\xa1\xf1\xa8\x84\xad\x01\xf6\x80\x20\xb4\xaf\x35\x0a\x41\x61\x5d\xf8\x79\x39\x8f\x97\xc4\x82\x72\x14\xce\x11\x0c\x1d\x41\xb3\xd9\x01\x1b\x90\x8a\xd8\x01\x2a\x65\x1b\x23\x01\xb5\x25\x68\x3c\xe5\x91\xc6\x91\x22\x3e\xb0\x29\xc1\xd9\x16\xb5\x30\xf9\x7f\x2b\x50\x68\x92\x8b\x68\x5a\x28\x1a\x53\xf2\x56\x13\x88\xdd\x91\x59\xc2\xb1\x62\x55\x05\xad\xbe\x26\xc5\x05\x53\x0e\xdb\x36\xcc\x87\xcd\x01\x1b\x2d\x6f\x28\xd5\x06\xd0\x95\xcd\x9e\x8c\xc4\x39\xf1\xdf\xff\x45\x04\x0d\x12\x8f\x68\xc4\x07\xa1\x9d\x38\xba\x48\x0b\xeb\xbc\xfc\xf8\xf9\x7b\x19\xf0\xed\x8d\xd6\x41\x0f\x6c\xd6\x5e\xac\xc3\x92\xd6\x85\xb6\xc7\xcf\xa0\xe5\x2b\x8c\xdb\x4c\xc8\xdb\xc8\x3a\x25\x65\x09\x6c\xbf\x3e\xfe\x7b\x5e\xf6\x00\xdb\xe8\x3c\x12\xbe\x30\x4a\xa4\x59\x45\x9e\x8f\x8e\x3d\xa8\x8f\x8c\x68\x72\xf0\x16\xac\x59\x41\xef\x15\x41\x8d\x52\x5d\xcc\x09\xdb\xd4\xcd\x56\xb3\xea\x53\xf0\x7d\x26\x11\x26\x15\x4a\x1f\x0c\x14\x8d\x34\x8e\x96\x01\x41\xdf\x35\x29\xa1\x7c\x22\x72\x1c\x57\x92\x21\xc7\x2a\x35\x5a\x45\xc1\xdb\xd8\x87\x23\xba\xbc\xbb\x1a\x9d\xac\x6b\x67\x6b\xc7\xa1\x0c\xd1\xf9\x2c\xe3\x7d\x6d\x9d\xc0\x4b\x1f\x59\x5c\x0f\x0a\x67\xf7\x30\x4b\xbe\xcd\x06\xe4\x2b\x09\xe6\x28\xf8\xc5\x74\xf4\x3d\x32\xf9\x36\xcb\xb2\x49\x41\xe6\x63\xc2\xb7\x30\x31\x6c\x01\xa7\x2c\x03\x00\xa8\x1d\xd5\xe8\x68\xee\xb9\x34\xe4\x6e\xe1\xb1\x91\xea\xb1\x0b\x7c\xc4\x84\xbf\xf5\x1a\xde\x49\x1a\x67\x80\xd0\xe9\x16\x38\xed\x46\x6e\xc9\x9b\x1b\x81\x0a\x0f\xa1\xe7\xe9\x3a\x31\xad\x91\x89\x0b\xe8\x86\xad\xb6\xd6\x39\x7b\xbc\xbb\x4e\xd0\x5d\xb6\x0f\xf3\xb0\xd9\x2d\x8c\xea\x17\x70\x7f\x0f\x86\x35\x9c\x46\xa2\x28\x1f\x0d\xab\xf9\xec\xb1\x03\x8e\x21\x5f\x8a\x9e\xbe\x85\x2e\xe8\x20\x16\x8c\x15\xa0\x6f\xf6\x32\x5b\x8c\x8c\xe7\x64\xdf\xe7\xe1\xd5\xf6\x95\x51\x58\xe3\x96\x35\x4b\x3b\xe4\x19\xa5\x76\xbd\xb1\x46\xb7\xa1\x2a\xd6\x93\x9f\x92\x04\x58\x4e\xb5\xf5\x2c\x41\x4b\xf7\x68\xa5\x72\xb6\x29\xab\x78\xf8\xde\x55\xca\x01\x1b\x21\x57\xa0\xa2\xf1\xba\x26\x99\x0e\xbd\x1f\x7c\x0b\xdd\xbd\xbb\x3e\xa5\xb6\x0d\x3c\xcb\xd4\xfc\xd5\x13\x6a\x34\x8a\xce\x0f\xf3\xc4\xb8\xa4\x32\xab\x92\xe4\x3d\x3e\xe6\x76\xa0\x79\x8b\x3b\x07\xe7\xe7\x8b\x65\x72\x53\xd0\x95\x24\x93\x68\xc6\xd3\xc5\x55\xe2\xdf\x2b\xee\x08\x7c\xe3\x28\xee\x39\x59\x84\x3d\x1c\x50\x73\x3e\xad\xc4\xd5\xe5\x7c\xa5\x2a\x52\xbb\xf9\x02\x4e\x43\xbc\x4f\x64\xa8\x60\xc5\xe8\xda\xbf\x78\x42\x8a\x91\xeb\x6a\xb6\x80\x73\xd6\x85\x78\xfe\x13\x00\x00\xff\xff\x59\x21\xa3\xaf\xad\x05\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0x44, 0xdc, 0x8a, 0x56, 0x84, 0x17, 0xd2, 0xd1, 0x5c, 0x8a, 0x2d, 0xc9, 0xfc, 0xa3, 0x57, 0x82, 0x13, 0xd0, 0xa0, 0x2c, 0xba, 0xb5, 0x15, 0x42, 0x8, 0x31, 0x26, 0x6f, 0xd, 0x66, 0x23}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x70\x3e\xac\x0e\xb0\x26\x97\x61\x07\xa3\x1f\x28\xda\x15\xe8\xa5\x2b\xba\xec\x07\x28\x32\x6d\x6b\x73\x48\x43\x62\x9a\x16\x45\xff\xfb\x20\x5b\x96\x9d\x2f\x6c\x3a\xc9\x12\xf5\x1e\xf9\xf8\x68\xb3\x6e\xd9\x0a\x3c\x32\xdd\x6f\xa8\x32\xab\x06\x97\xfc\x07\x09\x4a\xcb\x6b\x48\xf7\x8f\xd3\x24\xc4\x7f\x7f\x55\xeb\xb6\xc1\xc7\xfb\x65\x88\x1c\x0f\xd2\x24\x59\x2c\x16\xb0\xac\x8d\x03\xb1\x8a\x9c\xd2\x62\x98\xc0\x38\x28\xd9\xf6\x47\x25\x5a\x6b\xa8\x02\x45\x05\x0c\x18\xdd\x2b\x26\x04\xa5\x35\x6f\x48\x40\x18\x14\xb1\xd4\x68\x93\x64\x02\x94\x59\xd4\xa6\x35\x48\x92\xc3\x4d\x51\x58\x74\xee\x0b\x6c\x8d\xd4\x85\x55\xdb\x87\xbb\x1c\x7e\x3d\x90\x7c\xfb\x3a\x83\xf7\x24\x01\x00\xf0\xb0\xcf\x58\xa2\x45\xd2\xe8\x41\xa5\xc6\x18\x8f\xf6\xcc\x81\xe6\xa6\xc1\x0e\xbb\x7b\xd0\xa0\xc4\xfb\x67\x2c\x73\xf8\x3c\x16\x37\xbf\x1d\x63\x8f\xa0\x73\xd9\xa1\x8f\x80\x9e\xaf\xc0\x96\x9d\x91\xee\xc6\x17\x2b\x1c\x69\xc2\x55\xcf\xf2\xbe\xaf\xf6\x84\xec\x69\xb3\x6a\x8c\xfe\xe8\x39\x5b\x8b\xad\xb2\x98\x39\x53\x11\xda\x1c\x6e\x36\x52\xdf\xf4\xa2\xf9\xaa\x21\xac\xc5\x02\x56\x6c\x2d\x6f\x41\x81\xdd\x17\xa0\x7f\x7b\xe6\xba\x8c\xf6\x04\xf0\xcb\x61\x53\xce\x27\x2a\xc0\x65\x78\x12\x23\xfc\x9a\xf7\x04\x17\xc7\x15\xba\xca\x7c\x5f\x73\x38\x7a\xf9\x53\xd8\xaa\x0a\x9f\x94\xd4\xb3\x1d\xcc\xeb\x6b\x68\x15\x19\x9d\xa5\xa1\x26\x28\x18\x1d\x10\x0b\x38\x61\x8b\xa0\x08\x78\xf5\x1b\xb5\x80\xea\x45\x75\x2d\x6a\x53\x1a\x2c\xa0\x55\x52\xa7\xb3\x64\x2a\x41\x85\x7d\x50\x74\x8d\x83\xb6\x13\x33\xfa\xac\x07\x8b\x6f\x7c\x5f\x62\x30\x5c\x7a\x80\x90\xc8\xe8\xbc\x5d\x8a\xa8\x72\x00\x3e\x10\xdb\xa2\x46\xf3\x82\xf6\xc0\x6a\x51\xe9\xd1\x08\x70\x39\xb2\xef\x6a\x5d\xa1\xdc\xaa\x56\xad\x4c\x63\xe4\x2d\x3b\x2a\x6a\x6f\x93\x43\x4d\x63\x9f\xfe\xc3\x63\x57\xd9\xa9\x7e\xdc\xf2\xa6\x29\xba\x46\x9c\xf6\xd5\x50\xea\xce\x58\x0d\x2d\x09\xfe\xc5\x57\xd4\x1b\xc1\x61\x40\x83\x8a\x83\xd9\xe2\x9c\x74\x3f\x16\xff\xc1\x5b\x3a\x36\xa7\x43\xb3\xa8\x14\xb8\x38\x3f\x70\x6c\xdc\x67\xd3\x9f\xc3\xb8\xdf\xed\xe1\xdd\xde\x90\x1a\xda\x75\xcd\x71\xfa\xbd\xde\x0d\xdb\x4c\xbc\xb4\x39\x5c\x9c\x53\x29\xb3\x69\xe9\x2d\x3b\x99\x8c\xe8\xa7\x83\xa4\x2b\x94\x87\x3b\x97\xcd\xe6\x9a\x49\x94\x21\x37\xc9\x7e\x96\x43\xfa\xc3\x9a\xca\x90\x6a\x7a\x51\xc0\xd5\xb1\x27\xb5\x7a\xc1\x98\xbe\xa2\xb7\x35\x5b\x4c\x4f\x66\xfa\x2f\x9e\x65\x28\x1e\x5f\xa6\x2c\x5b\x4f\x3b\x90\xa4\xa1\xb0\x8f\xbf\x01\x00\x00\xff\xff\x3f\x4d\x34\x1d\x44\x06\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9f, 0x1f, 0xb5, 0x6a, 0xa8, 0x6f, 0x6e, 0xf0, 0x71, 0x9c, 0x39, 0x72, 0xaf, 0x9b, 0xd7, 0xae, 0x9b, 0xcf, 0xfd, 0xe, 0xda, 0x3d, 0x5, 0x9b, 0xc5, 0xd4, 0x19, 0x5c, 0x76, 0x60, 0x90, 0xc1}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x91\xc3\x48\x2f\xed\x7d\x8c\x41\x29\xcb\xb1\xf4\x90\x3d\x80\xea\xba\x89\xa8\x2b\x05\x5b\xa6\x1b\x25\xef\x3e\x1a\xb7\x49\x56\x18\xf3\xc9\x88\xef\xd7\x27\x89\xce\x9d\x04\x85\xad\x70\x95\xb8\xa1\xbd\x77\xb5\x9c\x1c\xc3\x31\xc8\x19\x8a\xe7\x72\x61\xee\xfc\xc7\x17\x9e\x3b\xef\xb6\x55\x7d\x27\xa7\xc2\xc8\x6c\xab\xba\x92\x70\xc1\x70\x20\x6e\x1e\x0d\xe7\xb5\xc2\x98\xd5\x6a\x05\x75\x4b\x11\x34\x20\x47\xb4\x4a\xc2\x40\x11\x2e\x2d\x2a\x20\x03\x5a\x2b\x89\x15\x2e\x92\xfc\x01\x42\xe2\x21\xa1\x02\x89\x3d\xf1\x09\x48\x23\x58\xf1\xde\xe5\xe4\x20\xe9\xd2\xde\x93\x85\xa8\x12\xb0\x71\xc6\xcc\x5b\x5f\x8d\x01\x00\xe8\x82\xeb\x30\xb8\x32\x52\xc3\x2e\xbc\xc2\x3a\x69\xbb\xce\xaa\xc5\x83\xb9\x3d\x3a\x42\x46\x96\x8d\xd3\x0d\x76\xb8\x27\x4f\xfa\x5d\x4e\xdb\x2e\x37\xa3\x7d\x37\x78\x77\xa8\xed\x62\x69\x5b\x67\x4f\x6f\x2f\xd7\x19\x38\x7d\x9f\x23\xfd\x7b\x79\xb3\xc2\xec\x79\x69\xca\xe2\x73\xd8\xf1\x76\xbc\xbf\xb3\x79\xe5\x49\x5d\x2c\x7e\xf5\xb9\x4f\x9f\xaf\xf5\xef\xd8\x63\xb4\xcf\x27\xe8\x4d\x6f\x7e\x02\x00\x00\xff\xff\xa2\x5c\x8d\xa2\x21\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x68, 0xb9, 0x75, 0x6d, 0x4c, 0xa, 0x1, 0x9c, 0x5f, 0xfc, 0x7b, 0x79, 0x0, 0x8e, 0x1, 0x8f, 0x18, 0xf4, 0xb8, 0xdf, 0x7c, 0x8d, 0xe1, 0x5e, 0x7e, 0xec, 0x5e, 0xe2, 0x90, 0xf2, 0xa3, 0xba}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                          scriptsBorrow_nftCdc,
	"scripts/get_collection_ids.cdc":                                  scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                               scriptsGet_collection_lengthCdc,
	"scripts/get_contract_storage_path.cdc":                           scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                    scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                        scriptsGet_nft_viewCdc,
	"scripts/get_total_supply.cdc":                                    scriptsGet_total_supplyCdc,
	"transactions/NFTForwarding/change_forwarder_recipient.cdc":       transactionsNftforwardingChange_forwarder_recipientCdc,
	"transactions/NFTForwarding/create_forwarder.cdc":                 transactionsNftforwardingCreate_forwarderCdc,
	"transactions/NFTForwarding/transfer_nft_to_receiver.cdc":         transactionsNftforwardingTransfer_nft_to_receiverCdc,
	"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc": transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
	"transactions/destroy_nft.cdc":                                    transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                       transactionsMint_nftCdc,
	"transactions/setup_account.cdc":                                  transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":               transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":               transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/transfer_nft.cdc":                                   transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                              transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
		"get_total_supply.cdc": {scriptsGet_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"NFTForwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftforwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftforwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftforwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftforwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
